{
  "openapi": "3.0.1",
  "info": {
    "title": "Proff API",
    "description": "You need a valid token to access Proff API. Contact sales for more information. Token header: Authorization : Token [YOUR_TOKEN]",
    "version": "1.0"
  },
  "paths": {
    "/api/persons/business/{country}": {
      "get": {
        "tags": [
          "BusinessPerson"
        ],
        "summary": "List of business person resources.",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO, SE, DK, FI",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO, SE, DK, FI",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Free text search query. Case insensitive. Required if 'nationalId' is not set.",
            "schema": {
              "type": "string",
              "description": "Free text search query. Case insensitive. Required if 'nationalId' is not set.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "nationalId",
            "in": "query",
            "description": "Query on a persons national id. Required if 'query' is not set.",
            "schema": {
              "type": "string",
              "description": "Query on a persons national id. Required if 'query' is not set.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "birthDate",
            "in": "query",
            "description": "Person birth date. Date format yyyy-MM-dd",
            "schema": {
              "type": "string",
              "description": "Person birth date. Date format yyyy-MM-dd",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Order in which to sort the returned list.\r\nPossible values: RELEVANCE, DATE_OF_BIRTH, ALPHABETICAL",
            "schema": {
              "type": "string",
              "description": "Order in which to sort the returned list.\r\nPossible values: RELEVANCE, DATE_OF_BIRTH, ALPHABETICAL",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "noOfNearbyPages",
            "in": "query",
            "description": "Preferred number of pagination uris.",
            "schema": {
              "type": "integer",
              "description": "Preferred number of pagination uris.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Preferred number of resources returned for a particular query - defaults to 10.",
            "schema": {
              "type": "integer",
              "description": "Preferred number of resources returned for a particular query - defaults to 10.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Requested page number - defaults to 1.",
            "schema": {
              "type": "integer",
              "description": "Requested page number - defaults to 1.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "filterPageSize",
            "in": "query",
            "description": "Overrides page size parameter for embedded filter links in the response.",
            "schema": {
              "type": "integer",
              "description": "Overrides page size parameter for embedded filter links in the response.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "sortPageSize",
            "in": "query",
            "description": "Overrides page size parameter for embedded sort links in the response.",
            "schema": {
              "type": "integer",
              "description": "Overrides page size parameter for embedded sort links in the response.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessPersonList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessPersonList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessPersonList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessPersonList"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessPersonList"
                }
              }
            }
          }
        }
      }
    },
    "/api/persons/business/{country}/{id}": {
      "get": {
        "tags": [
          "BusinessPerson"
        ],
        "summary": "Lookup a specific business persons resource.",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO, SE, DK, FI",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO, SE, DK, FI",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the entity.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier for the entity.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessPerson"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessPerson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessPerson"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessPerson"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessPerson"
                }
              }
            }
          }
        }
      }
    },
    "/api/persons/business/network/{country}": {
      "get": {
        "tags": [
          "BusinessPerson"
        ],
        "summary": "Presents the shortest business network path between to business persons.The two persons are coupled together by one or more mutual company and one or more mutually related business person. The person network will typically start and end with the persons ids defined in the input parameter set.",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO, SE, DK, FI",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO, SE, DK, FI",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The id defining the start point of the network path.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id defining the start point of the network path.",
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "The id defining the end point of the network path.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id defining the end point of the network path.",
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessNetworkConnectionNode"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessNetworkConnectionNode"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessNetworkConnectionNode"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessNetworkConnectionNode"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessNetworkConnectionNode"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/persons/business/suggestions/{country}": {
      "get": {
        "tags": [
          "BusinessPerson"
        ],
        "summary": "Get a list of suggested business person names based on the given suggestion term. No limit on how few letters the suggestion resource will respond to is enforced, but it is generally recommended (and it may be enforced in the future) to only querying the resource after at least 3 letters are provide.",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO, SE, DK, FI",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO, SE, DK, FI",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "The free text search query. Case insensitive.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The free text search query. Case insensitive.",
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Suggestion"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Suggestion"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Suggestion"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Suggestion"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Suggestion"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/persons/business/{country}/{id}/networkcandidates": {
      "get": {
        "tags": [
          "BusinessPerson"
        ],
        "summary": "Get network resource links for this specific business person resource, against other business persons matching query.",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO, SE, DK, FI",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO, SE, DK, FI",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the entity.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier for the entity.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "The free text search query. Case insensitive.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The free text search query. Case insensitive.",
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NetworkCandidate"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NetworkCandidate"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NetworkCandidate"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NetworkCandidate"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NetworkCandidate"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/changes/register/{country}": {
      "get": {
        "tags": [
          "Changes"
        ],
        "summary": "Changed companies and business units",
        "description": "Changes to publicly registered companies are normally updated once a day.<br />\r\n            \r\nCompanies are considered changed when they are removed from the RegisterCompany resource.\r\nCompanies are removed from the RegisterCompany resource after having been marked deleted for over 12 months.\r\nNew established companies are considered to be a change and will be included.\r\nDeletion of companies is considered to be a change and will be included.",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "The country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: \"NO\"",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: \"NO\"",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "scrollId",
            "in": "query",
            "description": "Specify a scroll Id to advance to the next batch of results.\r\nIf specified any other parameter is ignored.\r\n            \r\nGenerally",
            "schema": {
              "type": "string",
              "description": "Specify a scroll Id to advance to the next batch of results.\r\nIf specified any other parameter is ignored.\r\n            \r\nGenerally",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "types",
            "in": "query",
            "description": "Type of changes returned in the search result.\r\nChoose one or more of the following values:\r\n\r\nADDED: gets new documents\r\n\r\nREMOVED: gets removed documents\r\n\r\nMUTATED: gets changed documents\r\n\r\nIf MUTATED is specified all fields are considered.\r\nSee fields for details on overriding considered fields.\r\n            \r\nBy default all added, removed and changed documents are returned.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "xml": {
                  "name": "SchemaFilterContext"
                }
              },
              "description": "Type of changes returned in the search result.\r\nChoose one or more of the following values:\r\n\r\nADDED: gets new documents\r\n\r\nREMOVED: gets removed documents\r\n\r\nMUTATED: gets changed documents\r\n\r\nIf MUTATED is specified all fields are considered.\r\nSee fields for details on overriding considered fields.\r\n            \r\nBy default all added, removed and changed documents are returned.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "withPatch",
            "in": "query",
            "description": "The JSONPatch should be returned with each ChangedDoc element",
            "schema": {
              "type": "boolean",
              "description": "The JSONPatch should be returned with each ChangedDoc element",
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "To include ChangedDocs older than 1 day set this date. We keep a history of 30 days of changes.\r\nIf you have missed changes older 30 days, you should fetch the original document again.   \r\nFormat: yyyy-MM-dd",
            "schema": {
              "type": "string",
              "description": "To include ChangedDocs older than 1 day set this date. We keep a history of 30 days of changes.\r\nIf you have missed changes older 30 days, you should fetch the original document again.   \r\nFormat: yyyy-MM-dd",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "sourceDocId",
            "in": "query",
            "description": "Filter ChangedDocs by a sourceDocId.",
            "schema": {
              "type": "string",
              "description": "Filter ChangedDocs by a sourceDocId.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Which fields to look for changes in. Only applies for MUTATED documents.\r\n\r\nIf MUTATED documents are requested, the paths that are searched for changes can be overridden by specifying this parameter one or more times. \r\nE.g. specify fields=/name&fields=/phoneNumbers if you are only interested in changes to name or phoneNumbers.\r\n            \r\nThe paths refers to fields in the RegisterCompany schema.\r\nThey are used as prefixes, so /personRoles includes any change to any element in the array.\r\n\r\nIf you only specify this parameter, all ADDED, REMOVED and MUTATED (where this parameter matches) documents are returned.\r\n\r\nIf you want to exclude ADDED and REMOVED documents you have to specify the types parameter (with the MUTATED value).",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "xml": {
                  "name": "SchemaFilterContext"
                }
              },
              "description": "Which fields to look for changes in. Only applies for MUTATED documents.\r\n\r\nIf MUTATED documents are requested, the paths that are searched for changes can be overridden by specifying this parameter one or more times. \r\nE.g. specify fields=/name&fields=/phoneNumbers if you are only interested in changes to name or phoneNumbers.\r\n            \r\nThe paths refers to fields in the RegisterCompany schema.\r\nThey are used as prefixes, so /personRoles includes any change to any element in the array.\r\n\r\nIf you only specify this parameter, all ADDED, REMOVED and MUTATED (where this parameter matches) documents are returned.\r\n\r\nIf you want to exclude ADDED and REMOVED documents you have to specify the types parameter (with the MUTATED value).",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesResult"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/owner/{country}/{id}": {
      "get": {
        "tags": [
          "CompanyOwner"
        ],
        "summary": "CompanyOwner",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "The country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: \"NO\", \"DK\"",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: \"NO\", \"DK\"",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32",
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyRealOwner"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyRealOwner"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyRealOwner"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyRealOwner"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyRealOwner"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/liquidationestablishments/{country}": {
      "get": {
        "tags": [
          "LiquidationEstablishments"
        ],
        "summary": "Return all establishments and liquidations for the past two years",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO, SE, DK, FI",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO, SE, DK, FI",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "industryCode",
            "in": "query",
            "description": "Industry code",
            "schema": {
              "type": "string",
              "description": "Industry code",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "location",
            "in": "query",
            "description": "Location",
            "schema": {
              "type": "string",
              "description": "Location",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LiquidationAndEstablishments"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiquidationAndEstablishments"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiquidationAndEstablishments"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LiquidationAndEstablishments"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LiquidationAndEstablishments"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/eniropro/locations/{country}": {
      "get": {
        "tags": [
          "ProCompany"
        ],
        "summary": "Root location of a location tree with country as root element.",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\n             Possible values:\r\n                                <value>NO</value>,\r\n                                <value>DK</value>,\r\n                                <value>SE</value>",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\n             Possible values:\r\n                                <value>NO</value>,\r\n                                <value>DK</value>,\r\n                                <value>SE</value>",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProLocation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProLocation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProLocation"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProLocation"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProLocation"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/eniropro/{country}/{id}": {
      "get": {
        "tags": [
          "ProCompany"
        ],
        "summary": "Lookup a specific Eniro Pro company resource.",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\n             Possible values:\r\n                                <value>NO</value>,\r\n                                <value>DK</value>,\r\n                                <value>SE</value>",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\n             Possible values:\r\n                                <value>NO</value>,\r\n                                <value>DK</value>,\r\n                                <value>SE</value>",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the entity.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier for the entity.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProCompanyDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProCompanyDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProCompanyDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProCompanyDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProCompanyDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/eniropro/{country}": {
      "get": {
        "tags": [
          "ProCompany"
        ],
        "summary": "A list of Eniro Pro company resources.",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\n            Possible values:\r\n            <value>NO</value>,\r\n            <value>DK</value>,\r\n            <value>SE</value>",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\n            Possible values:\r\n            <value>NO</value>,\r\n            <value>DK</value>,\r\n            <value>SE</value>",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Free text search on company name. Case insensitive. Mutually exclusive with the 'industry' parameter.",
            "schema": {
              "type": "string",
              "description": "Free text search on company name. Case insensitive. Mutually exclusive with the 'industry' parameter.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "industryCode",
            "in": "query",
            "description": "Search on industry code.",
            "schema": {
              "type": "string",
              "description": "Search on industry code.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "industry",
            "in": "query",
            "description": "Free text search on company industry. Case insensitive. Mutually exclusive with the 'name' parameter.",
            "schema": {
              "type": "string",
              "description": "Free text search on company industry. Case insensitive. Mutually exclusive with the 'name' parameter.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "How the list should be sorted. Default is companyRank.",
            "schema": {
              "type": "string",
              "description": "How the list should be sorted. Default is companyRank.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "mapBoundingBox",
            "in": "query",
            "description": "Comma-separated list containing 2 pairs of coordinates (long, lat) for a map bounding box. First pair is lower-left corner, second pair is upper-right corner. Sequence: Western longitude, southern latitude, eastern longitude, northern latitude E.g.: 10.7417397,59.9152922,10.8417397,59.9952922",
            "schema": {
              "type": "string",
              "description": "Comma-separated list containing 2 pairs of coordinates (long, lat) for a map bounding box. First pair is lower-left corner, second pair is upper-right corner. Sequence: Western longitude, southern latitude, eastern longitude, northern latitude E.g.: 10.7417397,59.9152922,10.8417397,59.9952922",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Custom filter",
            "schema": {
              "type": "string",
              "description": "Custom filter",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Should the registerListing be expanded in the returned documents",
            "schema": {
              "type": "boolean",
              "description": "Should the registerListing be expanded in the returned documents",
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "noOfNearbyPages",
            "in": "query",
            "description": "Preferred number of pagination uris.",
            "schema": {
              "type": "integer",
              "description": "Preferred number of pagination uris.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Preferred number of resources returned for a particular query - defaults to 10.",
            "schema": {
              "type": "integer",
              "description": "Preferred number of resources returned for a particular query - defaults to 10.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Requested page number - defaults to 1.",
            "schema": {
              "type": "integer",
              "description": "Requested page number - defaults to 1.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "filterPageSize",
            "in": "query",
            "description": "Overrides page size parameter for embedded filter links in the response.",
            "schema": {
              "type": "integer",
              "description": "Overrides page size parameter for embedded filter links in the response.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "sortPageSize",
            "in": "query",
            "description": "Overrides page size parameter for embedded sort links in the response.",
            "schema": {
              "type": "integer",
              "description": "Overrides page size parameter for embedded sort links in the response.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProCompanyList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProCompanyList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProCompanyList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProCompanyList"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProCompanyList"
                }
              }
            }
          }
        }
      }
    },
    "/api/industries/eniropro/{country}": {
      "get": {
        "tags": [
          "ProIndustry"
        ],
        "summary": "EniroProIndustries resource holds information about industries that are know to EniroPro. EniroProIndustry are\r\ndistinct branches of trade, that a company can be associated with.",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO, SE, DK, FI",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO, SE, DK, FI",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "(Exact) name of the industry",
            "schema": {
              "type": "string",
              "description": "(Exact) name of the industry",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "categoryType",
            "in": "query",
            "description": "Which category type the industry belongs to. Defaults to MAIN\r\nPossible values: TOPCATEGORY, CATEGORY, MAIN, SPECIALITY",
            "schema": {
              "type": "string",
              "description": "Which category type the industry belongs to. Defaults to MAIN\r\nPossible values: TOPCATEGORY, CATEGORY, MAIN, SPECIALITY",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "noOfNearbyPages",
            "in": "query",
            "description": "Preferred number of pagination uris.",
            "schema": {
              "type": "integer",
              "description": "Preferred number of pagination uris.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Preferred number of resources returned for a particular query - defaults to 10.",
            "schema": {
              "type": "integer",
              "description": "Preferred number of resources returned for a particular query - defaults to 10.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Requested page number - defaults to 1.",
            "schema": {
              "type": "integer",
              "description": "Requested page number - defaults to 1.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "filterPageSize",
            "in": "query",
            "description": "Overrides page size parameter for embedded filter links in the response.",
            "schema": {
              "type": "integer",
              "description": "Overrides page size parameter for embedded filter links in the response.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "sortPageSize",
            "in": "query",
            "description": "Overrides page size parameter for embedded sort links in the response.",
            "schema": {
              "type": "integer",
              "description": "Overrides page size parameter for embedded sort links in the response.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EniroProIndustry"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EniroProIndustry"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EniroProIndustry"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EniroProIndustry"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EniroProIndustry"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/industries/eniropro/suggestions/{country}": {
      "get": {
        "tags": [
          "ProIndustry"
        ],
        "summary": "Get a list of suggested industry names based on the given suggestion term. No limit on how few letters the\r\nsuggestion resource will respond to is enforced, but it is generally recommended (and it may be enforced in the\r\nfuture) to only querying the resource after at least 3 letters are provided.",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO, SE, DK, FI",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO, SE, DK, FI",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "The free text search query. Case insensitive.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The free text search query. Case insensitive.",
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Suggestion"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Suggestion"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Suggestion"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Suggestion"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Suggestion"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/industries/eniropro/{country}/{id}": {
      "get": {
        "tags": [
          "ProIndustry"
        ],
        "summary": "An EniroPro industry.",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO, SE, DK, FI",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO, SE, DK, FI",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the entity.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier for the entity.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProIndustry"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProIndustry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProIndustry"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProIndustry"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProIndustry"
                }
              }
            }
          }
        }
      }
    },
    "/api/industries/eniropro/{country}/{id}/facts": {
      "get": {
        "tags": [
          "ProIndustry"
        ],
        "summary": "Get facts for an industry with the specified id",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO, SE, DK, FI",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO, SE, DK, FI",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the entity.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier for the entity.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProIndustryFacts"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProIndustryFacts"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProIndustryFacts"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProIndustryFacts"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EniroProIndustryFacts"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/register/businesscategories/{country}": {
      "get": {
        "tags": [
          "RegisterCompany"
        ],
        "summary": "List of register business category entities",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO,SE,DK,FI",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO,SE,DK,FI",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegisterBusinessCategory"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegisterBusinessCategory"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegisterBusinessCategory"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegisterBusinessCategory"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegisterBusinessCategory"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/register/{country}/{id}": {
      "get": {
        "tags": [
          "RegisterCompany"
        ],
        "summary": "Register company resource look-up.",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO,SE,DK,FI",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO,SE,DK,FI",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the entity.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier for the entity.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterCompanyDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterCompanyDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterCompanyDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterCompanyDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterCompanyDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/register/{country}/{id}/corporateStructure": {
      "get": {
        "tags": [
          "RegisterCompany"
        ],
        "summary": "Corporate structure look-up for a specific register company resource.",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO, SE, DK",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO, SE, DK",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the entity.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier for the entity.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CorporateStructure"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CorporateStructure"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CorporateStructure"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CorporateStructure"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CorporateStructure"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/register/{country}": {
      "get": {
        "tags": [
          "RegisterCompany"
        ],
        "summary": "List of publicly registered companies.",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "How the list should be sorted. If not specified, a default sorting is used.\r\nTable of default sorting.\r\nquery parameters\r\nDefault sorting\r\nprofitFrom, profitTo profitDesc\r\nrevenueFrom, revenueTo revenueDesc\r\nestablishedYearFrom, establishedYearTo establishedYearAsc\r\nnumEmployeesFrom, numEmployeesTo, numEmployeesDesc\r\ncompanyType, profitDesc\r\nlocation, profitDesc\r\nquery relevance \r\n            \r\nWhen mixing query parameters with different defaults, the default sorting is always the first one\r\nin the table that matches a query parameter.\r\n\r\nPossible values:\r\nnumEmployeesAsc, numEmployeesDesc, revenueAsc, revenueDesc, establishedYearAsc, establishedYearDesc,\r\ncompanyNameDesc, naceIndustryName, companyTypeNameDesc, profitAsc, profitDesc, relevance, postNumber",
            "schema": {
              "type": "string",
              "description": "How the list should be sorted. If not specified, a default sorting is used.\r\nTable of default sorting.\r\nquery parameters\r\nDefault sorting\r\nprofitFrom, profitTo profitDesc\r\nrevenueFrom, revenueTo revenueDesc\r\nestablishedYearFrom, establishedYearTo establishedYearAsc\r\nnumEmployeesFrom, numEmployeesTo, numEmployeesDesc\r\ncompanyType, profitDesc\r\nlocation, profitDesc\r\nquery relevance \r\n            \r\nWhen mixing query parameters with different defaults, the default sorting is always the first one\r\nin the table that matches a query parameter.\r\n\r\nPossible values:\r\nnumEmployeesAsc, numEmployeesDesc, revenueAsc, revenueDesc, establishedYearAsc, establishedYearDesc,\r\ncompanyNameDesc, naceIndustryName, companyTypeNameDesc, profitAsc, profitDesc, relevance, postNumber",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "industryCode",
            "in": "query",
            "description": "Get industry code",
            "schema": {
              "type": "string",
              "description": "Get industry code",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "location",
            "in": "query",
            "description": "Filter by a location.  Examples (description in parenthesis is not a part of the value):\r\n\"Viken\" (county), \"Drammen\" (municipality), \"Østlandet\" (country part)",
            "schema": {
              "type": "string",
              "description": "Filter by a location.  Examples (description in parenthesis is not a part of the value):\r\n\"Viken\" (county), \"Drammen\" (municipality), \"Østlandet\" (country part)",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Free text query. Case insensitive. Required if none of the other parameters are used. If\r\nthis is the only parameter set it is considered to be a \"simple search\" which affects which sorting you can use.",
            "schema": {
              "type": "string",
              "description": "Free text query. Case insensitive. Required if none of the other parameters are used. If\r\nthis is the only parameter set it is considered to be a \"simple search\" which affects which sorting you can use.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "numEmployeesFrom",
            "in": "query",
            "description": "Number of employees, from",
            "schema": {
              "type": "string",
              "description": "Number of employees, from",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "numEmployeesTo",
            "in": "query",
            "description": "Highest number of employees companies in the list should have.",
            "schema": {
              "type": "string",
              "description": "Highest number of employees companies in the list should have.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "revenueFrom",
            "in": "query",
            "description": "Lowest revenue companies in the list should have.",
            "schema": {
              "type": "string",
              "description": "Lowest revenue companies in the list should have.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "revenueTo",
            "in": "query",
            "description": "Highest revenue companies in the list should have.",
            "schema": {
              "type": "string",
              "description": "Highest revenue companies in the list should have.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "profitFrom",
            "in": "query",
            "description": "Lowest profit companies in the list should have.",
            "schema": {
              "type": "string",
              "description": "Lowest profit companies in the list should have.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "profitTo",
            "in": "query",
            "description": "Highest profit companies in the list should have.",
            "schema": {
              "type": "string",
              "description": "Highest profit companies in the list should have.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "establishedYearFrom",
            "in": "query",
            "description": "Earliest year the companies in the list should have been established.",
            "schema": {
              "type": "string",
              "description": "Earliest year the companies in the list should have been established.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "establishedYearTo",
            "in": "query",
            "description": "Most recent year the companies in the list should have been established.",
            "schema": {
              "type": "string",
              "description": "Most recent year the companies in the list should have been established.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "companyType",
            "in": "query",
            "description": "Array of company types.\r\nSome examples of Norwegian codes: \"AS\", \"ANS\", \"EP\" and \"NUF\".",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "xml": {
                  "name": "SchemaFilterContext"
                }
              },
              "description": "Array of company types.\r\nSome examples of Norwegian codes: \"AS\", \"ANS\", \"EP\" and \"NUF\".",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "industry",
            "in": "query",
            "description": "Get industries",
            "schema": {
              "type": "string",
              "description": "Get industries",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "foundationDateFrom",
            "in": "query",
            "description": "Foundation date from - dd.MM.yyyy format",
            "schema": {
              "type": "string",
              "description": "Foundation date from - dd.MM.yyyy format",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "foundationDateTo",
            "in": "query",
            "description": "Foundation date to - dd.MM.yyyy format",
            "schema": {
              "type": "string",
              "description": "Foundation date to - dd.MM.yyyy format",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "liquidationDateFrom",
            "in": "query",
            "description": "Liquidation from - dd.MM.yyyy format",
            "schema": {
              "type": "string",
              "description": "Liquidation from - dd.MM.yyyy format",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "liquidationDateTo",
            "in": "query",
            "description": "Liquidation date to - dd.MM.yyyy format",
            "schema": {
              "type": "string",
              "description": "Liquidation date to - dd.MM.yyyy format",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter. E.g.: status:AKTIVT",
            "schema": {
              "type": "string",
              "description": "Filter. E.g.: status:AKTIVT",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "accountRange",
            "in": "query",
            "description": "AccountRange filter formatted as accountingCode|year|from:to\r\n            \r\nE.g. SDI|2023|290000:300000\r\n            \r\nCan be repeated  \r\nIf combination of accounting code and year is repeated they are treated as a logical OR.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "xml": {
                  "name": "SchemaFilterContext"
                }
              },
              "description": "AccountRange filter formatted as accountingCode|year|from:to\r\n            \r\nE.g. SDI|2023|290000:300000\r\n            \r\nCan be repeated  \r\nIf combination of accounting code and year is repeated they are treated as a logical OR.",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "accounts",
            "in": "query",
            "description": "The account type to apply {@link #accountRange} filters to.\r\nIf not specified this defaults to companyAccounts.\r\n\r\nValid values are `company` and `corporate`",
            "schema": {
              "type": "string",
              "description": "The account type to apply {@link #accountRange} filters to.\r\nIf not specified this defaults to companyAccounts.\r\n\r\nValid values are `company` and `corporate`",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "noOfNearbyPages",
            "in": "query",
            "description": "Preferred number of pagination uris.",
            "schema": {
              "type": "integer",
              "description": "Preferred number of pagination uris.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Preferred number of resources returned for a particular query - defaults to 10.",
            "schema": {
              "type": "integer",
              "description": "Preferred number of resources returned for a particular query - defaults to 10.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Requested page number - defaults to 1.",
            "schema": {
              "type": "integer",
              "description": "Requested page number - defaults to 1.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "filterPageSize",
            "in": "query",
            "description": "Overrides page size parameter for embedded filter links in the response.",
            "schema": {
              "type": "integer",
              "description": "Overrides page size parameter for embedded filter links in the response.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "sortPageSize",
            "in": "query",
            "description": "Overrides page size parameter for embedded sort links in the response.",
            "schema": {
              "type": "integer",
              "description": "Overrides page size parameter for embedded sort links in the response.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterCompanyList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterCompanyList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterCompanyList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterCompanyList"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterCompanyList"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/register/companytypes/{country}": {
      "get": {
        "tags": [
          "RegisterCompany"
        ],
        "summary": "Get all official company types.",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO,SE,DK,FI",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: NO,SE,DK,FI",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegisterCompanyType"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegisterCompanyType"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegisterCompanyType"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegisterCompanyType"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegisterCompanyType"
                  },
                  "xml": {
                    "name": "SchemaFilterContext"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/service/tokeninformation": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Returns information about the token including call limits and recorded calls",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TokenInformation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenInformation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenInformation"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TokenInformation"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TokenInformation"
                }
              }
            }
          }
        }
      }
    },
    "/api/shareholders/eniropro/{country}/role/{roleId}": {
      "get": {
        "tags": [
          "Shareholders"
        ],
        "summary": "Lookup shareholders by Role-ID",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: \"NO\"",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: \"NO\"",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Role-ID for person",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Role-ID for person",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShareholdersResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareholdersResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareholdersResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ShareholdersResult"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ShareholdersResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/shareholders/eniropro/{country}/owners/{companyId}": {
      "get": {
        "tags": [
          "Shareholders"
        ],
        "summary": "Get owners for a specific company.",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code. Possible values: \"NO\"",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code. Possible values: \"NO\"",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "Company organisation number",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Company organisation number",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "direct",
            "in": "query",
            "description": "Restrict to direct ownerships",
            "schema": {
              "type": "boolean",
              "description": "Restrict to direct ownerships",
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Preferred number of resources returned for a particular query - defaults to 10.",
            "schema": {
              "type": "integer",
              "description": "Preferred number of resources returned for a particular query - defaults to 10.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Requested page number - defaults to 1.",
            "schema": {
              "type": "integer",
              "description": "Requested page number - defaults to 1.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LookupResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LookupResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LookupResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LookupResult"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LookupResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/shareholders/eniropro/{country}/ownerships/{id}": {
      "get": {
        "tags": [
          "Shareholders"
        ],
        "summary": "Get shares owned by a specific person or company.\r\nOwner id can be found in the id field of entity",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: \"NO\"",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code.\r\nPossible values: \"NO\"",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Organisation number or ownerId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Organisation number or ownerId",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "direct",
            "in": "query",
            "description": "Restrict to direct ownerships",
            "schema": {
              "type": "boolean",
              "description": "Restrict to direct ownerships",
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Preferred number of resources returned for a particular query - defaults to 10.",
            "schema": {
              "type": "integer",
              "description": "Preferred number of resources returned for a particular query - defaults to 10.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Requested page number - defaults to 1.",
            "schema": {
              "type": "integer",
              "description": "Requested page number - defaults to 1.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LookupResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LookupResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LookupResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LookupResult"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LookupResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/shareholders/eniropro/{country}": {
      "get": {
        "tags": [
          "Shareholders"
        ],
        "summary": "Query for both company- and person shareholders.",
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code. Possible values: \"NO\"",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country to search within. Must be a two letter uppercase ISO 3166-1-alpha-2 country code. Possible values: \"NO\"",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Company name or person name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Company name or person name",
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Preferred number of resources returned for a particular query - defaults to 10.",
            "schema": {
              "type": "integer",
              "description": "Preferred number of resources returned for a particular query - defaults to 10.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Requested page number - defaults to 1.",
            "schema": {
              "type": "integer",
              "description": "Requested page number - defaults to 1.",
              "format": "int32",
              "nullable": true,
              "xml": {
                "name": "SchemaFilterContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShareholdersResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareholdersResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareholdersResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ShareholdersResult"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ShareholdersResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "description": "The hypertext reference (URI) of the linked resource.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "rel": {
            "type": "string",
            "description": "The type of the relationship between the origin and the target of the link. For example the relationship on a link\r\nto the next page would be \"next\" and the relationship on a link to company details would be \"details\".",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "An Atom-style link that describes the relationships between resources.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Connection": {
        "type": "object",
        "properties": {
          "gender": {
            "type": "string",
            "description": "The gender of the person in a abbreviation form: \"K\" (female) or \"M\" (male)",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "The full name of the person.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "numberOfConnections": {
            "type": "string",
            "description": "The number of role connections the associated person has.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "personId": {
            "type": "string",
            "description": "Id of the person",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "link": {
            "$ref": "#/components/schemas/Link"
          }
        },
        "additionalProperties": false,
        "description": "A connection a person has to another person",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "IndustryConnection": {
        "type": "object",
        "properties": {
          "industryCode": {
            "type": "integer",
            "description": "Industry code",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "The name of the industry that this person has a role in.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "details": {
            "$ref": "#/components/schemas/Link"
          }
        },
        "additionalProperties": false,
        "description": "An industry a person has roles in.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Coordinate": {
        "type": "object",
        "properties": {
          "xCoordinate": {
            "type": "number",
            "description": "This location longitude- or x-coordinate value - Depending on the coordinate system representation.",
            "format": "double",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "yCoordinate": {
            "type": "number",
            "description": "This location latitude- or y-coordinate value - Depending on the coordinate system representation.",
            "format": "double",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "coordinateSystem": {
            "type": "string",
            "description": "Specifies which coordinate system the provided coordinates use.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "Coordinate for a company.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "countryPart": {
            "type": "string",
            "description": "Country subdivision the address is situated in.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "county": {
            "type": "string",
            "description": "County description.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "municipality": {
            "type": "string",
            "description": "The postal municipality, district or area.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "coordinates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Coordinate"
            },
            "description": "Coordinate for a company.",
            "nullable": true,
            "xml": {
              "name": "coordinates",
              "wrapped": true
            }
          }
        },
        "additionalProperties": false,
        "description": "Geographical information about the company.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "addressLine": {
            "type": "string",
            "description": "Free text field which typically can hold Street- or road name + entrance number or postbox number, post office\r\nname.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "boxAddressLine": {
            "type": "string",
            "description": "Free text field that holds postbox number and post office name, if any.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "postPlace": {
            "type": "string",
            "description": "Post place.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "zipCode": {
            "type": "string",
            "description": "Zipcode.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "Address information.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "DayOfWeek": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "DateOnly": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "month": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "day": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "dayOfYear": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "dayNumber": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The code for the type of this account.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "amount": {
            "type": "string",
            "description": "The amount for this account.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "An account used in company accounting",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "AnnualAccount": {
        "type": "object",
        "properties": {
          "accIncompleteCode": {
            "type": "string",
            "description": "The code for the account being incomplete",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "accIncompleteDesc": {
            "type": "string",
            "description": "The comment description for the account being incomplete",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "combined": {
            "type": "boolean",
            "description": "Whether or not this is a combined annual account for an enterprise.",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "currency": {
            "type": "string",
            "description": "The code for the currency the account amounts are in.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "length": {
            "type": "string",
            "description": "Accounting reported period. Number of months.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "period": {
            "type": "string",
            "description": "accounting reported period. (year and month YYYY-MM format)",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "year": {
            "type": "string",
            "description": "The year this annual account is for. On standard ECS format.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "periodStart": {
            "$ref": "#/components/schemas/DateOnly"
          },
          "periodEnd": {
            "$ref": "#/components/schemas/DateOnly"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            },
            "description": "An account used in company accounting.",
            "nullable": true,
            "xml": {
              "name": "accounts",
              "wrapped": true
            }
          }
        },
        "additionalProperties": false,
        "description": "An annual account for a company or an enterprise.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "description": "The organisation number of the associated company.",
            "format": "int64",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "companyName": {
            "type": "string",
            "description": "The complete and formal name of the company that this role belongs to.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "roleName": {
            "type": "string",
            "description": "The name of the role.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "company": {
            "$ref": "#/components/schemas/Link"
          },
          "companyAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnnualAccount"
            },
            "description": "Annual accounts for the company. Note that only a subset of accounting posts are available, for a complete\r\nset the company must be retrieved.",
            "nullable": true,
            "xml": {
              "name": "companyAccounts",
              "wrapped": true
            }
          }
        },
        "additionalProperties": false,
        "description": "A role a person has in a company.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "BusinessPerson": {
        "type": "object",
        "properties": {
          "age": {
            "type": "integer",
            "description": "The business persons age.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "associatedCount": {
            "type": "integer",
            "description": "Number of business person association.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "ecoId": {
            "type": "integer",
            "description": "ECO Eniro common identity for the person. May be null, if unknown.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "gender": {
            "type": "string",
            "description": "The gender of the person in a abbreviation form: \"K\" (female) or \"M\" (male)",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "The full name of the person.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "numberOfRoles": {
            "type": "integer",
            "description": "The number of business persons associated with this person.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "personId": {
            "type": "string",
            "description": "Id of the person",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "yearOfBirth": {
            "type": "integer",
            "description": "This persons year of birth.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "connections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection"
            },
            "description": "Connection between 2 persons.",
            "nullable": true,
            "xml": {
              "name": "connections",
              "wrapped": true
            }
          },
          "link": {
            "$ref": "#/components/schemas/Link"
          },
          "industryConnections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndustryConnection"
            },
            "description": "An industry a person has roles in.",
            "nullable": true,
            "xml": {
              "name": "industryConnections",
              "wrapped": true
            }
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "postalAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            },
            "description": "Person role in a company.",
            "nullable": true,
            "xml": {
              "name": "roles",
              "wrapped": true
            }
          },
          "visitorAddress": {
            "$ref": "#/components/schemas/Address"
          }
        },
        "additionalProperties": false,
        "description": "Professional with business roles in companies and connections to other professionals in the enterprise world.\r\nRoles can typically be: Chairman, committee member, deputy committee member or shareholder (Daglig Leder,\r\nStyreformann, Styremedlem, Varamedlem, Aksjon�r). A business connection is a connection between this business person to\r\nother businesses persons.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Sorting": {
        "type": "object",
        "properties": {
          "sortType": {
            "type": "string",
            "description": "Sort type of this link",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "href": {
            "type": "string",
            "description": "The hypertext reference (URI) of the linked resource.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "rel": {
            "type": "string",
            "description": "The type of the relationship between the origin and the target of the link. For example the relationship on a link\r\nto the next page would be \"next\" and the relationship on a link to company details would be \"details\".",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "Sorting information for a page.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Filter": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "a descriptive name of something that all filters in this group is a specialization of.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "hits": {
            "type": "integer",
            "description": "the number of elements this filter will yield.",
            "format": "int64",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "link": {
            "$ref": "#/components/schemas/Link"
          }
        },
        "additionalProperties": false,
        "description": "Filter",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "FilterGroup": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "a descriptive name of something that all filters in this group is a specialisation of.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "filterType": {
            "type": "string",
            "description": "the type identifier for this filter group. E.g. 'fxcountrypart'. All filters in this group will be of this type.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "the name of this filter group, e.g. 'fxbccodedeepnavigator'. This is sometimes necessary to distinguish between filter groups with the same type.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Filter"
            },
            "description": "A filter that will produce a subset of a list.",
            "nullable": true,
            "xml": {
              "name": "filters",
              "wrapped": true
            }
          },
          "removed": {
            "$ref": "#/components/schemas/Link"
          }
        },
        "additionalProperties": false,
        "description": "Filter group. The display name is a common description for all the filters in the group. I.e. if the display name in the filter group is: 'Countrypart' then you can expect all filters to represent a particular country part like: Nord-Norge (North of Norway) or Vestlandet.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "PageLink": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "description": "An Atom-style link that describes the relationships between resources.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "href": {
            "type": "string",
            "description": "The hypertext reference (URI) of the linked resource.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "rel": {
            "type": "string",
            "description": "The type of the relationship between the origin and the target of the link. For example the relationship on a link\r\nto the next page would be \"next\" and the relationship on a link to company details would be \"details\".",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "An Atom-style link that describes the relationships between resources.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "description": "The currently requested page.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "numberOfAvailablePages": {
            "type": "integer",
            "description": "Total number of available pages for the current list.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "pageSize": {
            "type": "integer",
            "description": "Total number of results listed on the page.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "nearbyPages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageLink"
            },
            "description": "An Atom-style link that describes the relationships between resources.",
            "nullable": true,
            "xml": {
              "name": "nearbyPages",
              "wrapped": true
            }
          },
          "next": {
            "$ref": "#/components/schemas/PageLink"
          },
          "previous": {
            "$ref": "#/components/schemas/PageLink"
          },
          "sorting": {
            "$ref": "#/components/schemas/Sorting"
          }
        },
        "additionalProperties": false,
        "description": "Pagination information for a page in a list of data.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "BusinessPersonList": {
        "type": "object",
        "properties": {
          "businessPersons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessPerson"
            },
            "description": "Professional with business roles in companies, and with connections to other professionals in the enterprise world. Roles can typically be: Chairman, committee member, deputy committee member or shareholder (Daglig Leder, Styreformann, Styremedlem, Varamedlem, Aksjon�r). A business connection is a connection this business person has to other businesses persons.",
            "nullable": true,
            "xml": {
              "name": "businessPersons",
              "wrapped": true
            }
          },
          "sorting": {
            "$ref": "#/components/schemas/Sorting"
          },
          "correctedQuery": {
            "type": "string",
            "description": "A possible rewrite of the query string made by the search engine. The search result typically reflects this\r\nrewritten query",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "numberOfHits": {
            "type": "integer",
            "description": "Total number of hits available.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "filterGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterGroup"
            },
            "description": "A set of related filters. The display name is a common description for all the filters in the group. I.e. if the display name in the filter group is: 'Countrypart' then you can expect all filters to represent a particular country part like: Nord-Norge (North of Norway) or Vestlandet.",
            "nullable": true,
            "xml": {
              "name": "filterGroups",
              "wrapped": true
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "additionalProperties": false,
        "description": "List of business person resources plus resource meta data, pagination and filter information.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "TelephoneNumbers": {
        "type": "object",
        "properties": {
          "faxNumber": {
            "type": "string",
            "description": "A company's fax number.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "mobilePhone": {
            "type": "string",
            "description": "A company's mobile phone number.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "mobilePhone2": {
            "type": "string",
            "description": "Additional mobile number of the company",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "telephoneNumber": {
            "type": "string",
            "description": "A company's telephone number.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "telephoneNumber2": {
            "type": "string",
            "description": "Additional telephone number of the company",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "A company's phone numbers.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "NetworkCompany": {
        "type": "object",
        "properties": {
          "businessUnitId": {
            "type": "string",
            "description": "Company business unit ID (DK only).",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "companyId": {
            "type": "string",
            "description": "Company Id",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "email": {
            "type": "string",
            "description": "Company main email.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "homePage": {
            "type": "string",
            "description": "Company main internet home page.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "marketingProtection": {
            "type": "boolean",
            "description": "Central Business Register (Denmark) marked company as protected against being contacted for advertisement purpose.\r\nApplicable only for Denmark.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "Company name.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "organisationNumber": {
            "type": "string",
            "description": "Company organisation number.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "link": {
            "$ref": "#/components/schemas/Link"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "phoneNumbers": {
            "$ref": "#/components/schemas/TelephoneNumbers"
          },
          "postalAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "visitorAddress": {
            "$ref": "#/components/schemas/Address"
          }
        },
        "additionalProperties": false,
        "description": "A company with common basic information like name, address and location. Visitor- and postal addresses are optional.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "BusinessNetworkConnectionNode": {
        "type": "object",
        "properties": {
          "company": {
            "$ref": "#/components/schemas/NetworkCompany"
          },
          "person": {
            "$ref": "#/components/schemas/BusinessPerson"
          }
        },
        "additionalProperties": false,
        "description": "Linked list defining shortest path between two entities. Node types are typically alternating between businessperson and company since the shortest path between to business persons goes via a common company.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Suggestion": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "The actual proposed suggestion.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "A particular proposal for some input term. The suggestion value can be a the suggestion for any type of query for example a company or person name.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "NetworkCandidatePerson": {
        "type": "object",
        "properties": {
          "ecoId": {
            "type": "integer",
            "description": "ECO Eniro common identity for the person. May be null, if unknown.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "gender": {
            "type": "string",
            "description": "The gender of the person in a abbreviation form: \"K\" (female) or \"M\" (male)",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "The full name of the person.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "numberOfRoles": {
            "type": "integer",
            "description": "The number of business persons associated with this person.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "personId": {
            "type": "string",
            "description": "Id of the person",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "yearOfBirth": {
            "type": "integer",
            "description": "This persons year of birth.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "link": {
            "$ref": "#/components/schemas/Link"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "postalAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "visitorAddress": {
            "$ref": "#/components/schemas/Address"
          }
        },
        "additionalProperties": false,
        "description": "A business person available for a business network search",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "NetworkCandidate": {
        "type": "object",
        "properties": {
          "networkLink": {
            "$ref": "#/components/schemas/Link"
          },
          "person": {
            "$ref": "#/components/schemas/NetworkCandidatePerson"
          }
        },
        "additionalProperties": false,
        "description": "A candidate for matching against a business person in a network search.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "ChangedEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Changed entity organisation number",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "patch": {
            "type": "object",
            "additionalProperties": false,
            "description": "Patch object",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "createdDate": {
            "type": "integer",
            "description": "The time the change/patch was made, in milliseconds after 1970-01-01 00:00:00",
            "format": "int64",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "patchId": {
            "type": "string",
            "description": "Unique identifier of the change",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "Represents a changed company.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "ChangesResult": {
        "type": "object",
        "properties": {
          "numberOfHits": {
            "type": "integer",
            "description": "Total number of hits available.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangedEntity"
            },
            "description": "Array of changed companies",
            "nullable": true,
            "xml": {
              "name": "entities",
              "wrapped": true
            }
          },
          "next": {
            "$ref": "#/components/schemas/Link"
          }
        },
        "additionalProperties": false,
        "description": "Query result.\r\nUse link.next to retrieve the next batch of changedDocs.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "AddressRealOwner": {
        "type": "object",
        "properties": {
          "streetAddress": {
            "type": "string",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "postalCode": {
            "type": "string",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "city": {
            "type": "string",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "countryCode": {
            "type": "string",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "NaceRealOwner": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "displayName": {
            "type": "string",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "RoleEntryRealOwner": {
        "type": "object",
        "properties": {
          "roleTypeId": {
            "type": "string",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "roleTypeName": {
            "type": "string",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "electedBy": {
            "type": "string",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "responsibility": {
            "type": "string",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "lastUpdate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "ShareholderRealOwner": {
        "type": "object",
        "properties": {
          "eniroId": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "birthYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "nameFromRole": {
            "type": "string",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "nameFromShareholder": {
            "type": "string",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "identificationExplanation": {
            "type": "string",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "shareInPercent": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "roleEntries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleEntryRealOwner"
            },
            "nullable": true,
            "xml": {
              "name": "roleEntries",
              "wrapped": true
            }
          },
          "directOwnership": {
            "type": "boolean",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "indirectOwnership": {
            "type": "boolean",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "countryCode": {
            "type": "string",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "location": {
            "type": "string",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "zipCode": {
            "type": "string",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "address": {
            "type": "string",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "CompanyRealOwner": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "description": "ID of company",
            "format": "int64",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "Name of the company",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "mostRecentAccountingYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "requestResultId": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "requestResultMessage": {
            "type": "string",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "visitAddress": {
            "$ref": "#/components/schemas/AddressRealOwner"
          },
          "postalAddress": {
            "$ref": "#/components/schemas/AddressRealOwner"
          },
          "nace": {
            "$ref": "#/components/schemas/NaceRealOwner"
          },
          "shareholders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShareholderRealOwner"
            },
            "nullable": true,
            "xml": {
              "name": "shareholders",
              "wrapped": true
            }
          }
        },
        "additionalProperties": false,
        "description": "Company owner response, result class containing actual owner of the company",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "DateValueItem": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Date",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "value": {
            "type": "string",
            "description": "Value",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "Date value item class",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Liquidations": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DateValueItem"
            },
            "description": "Liquidations grouped by yyyy-MM",
            "nullable": true,
            "xml": {
              "name": "items",
              "wrapped": true
            }
          }
        },
        "additionalProperties": false,
        "description": "Model containing list of items",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Establishments": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DateValueItem"
            },
            "description": "Establishments grouped by yyyy-MM",
            "nullable": true,
            "xml": {
              "name": "items",
              "wrapped": true
            }
          }
        },
        "additionalProperties": false,
        "description": "Model containing list of items",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "LiquidationAndEstablishments": {
        "type": "object",
        "properties": {
          "liquidations": {
            "$ref": "#/components/schemas/Liquidations"
          },
          "establishments": {
            "$ref": "#/components/schemas/Establishments"
          }
        },
        "additionalProperties": false,
        "description": "Liquidation and establishments search result",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "EniroProLocation": {
        "type": "object",
        "properties": {
          "countryId": {
            "type": "string",
            "description": "Location country ID.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "id": {
            "type": "string",
            "description": "The unique id identifying this location.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "locationType": {
            "type": "string",
            "description": "Location type.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "Location name.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "parentId": {
            "type": "string",
            "description": "parent ID.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EniroProLocation"
            },
            "description": "Child locations. Circular relationship.",
            "nullable": true,
            "xml": {
              "name": "children",
              "wrapped": true
            }
          }
        },
        "additionalProperties": false,
        "description": "EniroProLocation",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "PublicListing": {
        "type": "object",
        "properties": {
          "companyCountry": {
            "type": "string",
            "description": "Company country",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "ticker": {
            "type": "string",
            "description": "Ticker",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "stockExchange": {
            "type": "string",
            "description": "Stock Exchange",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "listingDate": {
            "type": "string",
            "description": "Listing date",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "companyName": {
            "type": "string",
            "description": "Company Name",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "isin": {
            "type": "string",
            "description": "ISIN for stock",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "Details for a publicly listing",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "ExternalLink": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Url",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "description": {
            "type": "string",
            "description": "Description/name of url.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "External link",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Brochure": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A short description related to the on-line brochure.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "url": {
            "type": "string",
            "description": "The URL to the on-line brochure.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "Reference to a on-line brochure containing information about a company",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Certification": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The certification code associated with this certification.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "logo": {
            "type": "string",
            "description": "The name, location or id of a logo associated with this certification.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "text": {
            "type": "string",
            "description": "A description of the certificate.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "url": {
            "type": "string",
            "description": "A url to more information about this certification.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "Company certification.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "ContactPerson": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email of the company contact person",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "The name of the company's contact person.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "role": {
            "type": "string",
            "description": "The role the contact person has in the company.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "roleCode": {
            "type": "string",
            "description": "The role code the contact person has in the company.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "telephoneNumber": {
            "type": "string",
            "description": "The telephone number of the company contact person",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "A contact person for a company.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Dealers": {
        "type": "object",
        "properties": {
          "dealerNames": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "SchemaFilterContext"
              }
            },
            "description": "Get a list of names of dealers of a company's products.",
            "nullable": true,
            "xml": {
              "name": "dealerNames",
              "wrapped": true
            }
          },
          "informationUrl": {
            "type": "string",
            "description": "A url to information about dealers of a company's products.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "The dealers of a company's products.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Distributor": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the company",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "orgNumber": {
            "type": "string",
            "description": "The organisation number of the company",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "The distributor for the company",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Distributors": {
        "type": "object",
        "properties": {
          "informationUrl": {
            "type": "string",
            "description": "The information Url of the company",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "distributorArray": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Distributor"
            },
            "description": "The distributor for the company",
            "nullable": true,
            "xml": {
              "name": "distributorArray",
              "wrapped": true
            }
          }
        },
        "additionalProperties": false,
        "description": "The distributors for the company",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Image": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "description": "Identifier (id, url, filename etc. depending on context) for this image.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "text": {
            "type": "string",
            "description": "A text associated with this image.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "url": {
            "type": "string",
            "description": "Image URL",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "Meta information about an image.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "ListingTextLine": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Line of free text associated with a listing node.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "type": {
            "type": "string",
            "description": "The type of freeText. Suggests where the text should be displayed in relation to the other content of the listing\r\nnode. Possible values:\r\n- COMPANY_NAME_SUFFIX The text should be displayed behind the company name.\r\n- PREFIX The text should be in-front of the phone number/email/homepage.\r\n- ADDRESS_SUFFIXThe text should be displayed after an address.\r\nPossible values:\r\n<value>COMPANY_NAME_SUFFIX</value>\r\n,\r\n<value>PREFIX</value>\r\n,\r\n<value>ADDRESS_SUFFIX</value>",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "A line of free text associated with content in a listing node. The type field suggests where the text should be\r\ndisplayed in relation to the other content of the listing node.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Listing": {
        "type": "object",
        "properties": {
          "businessUnitId": {
            "type": "string",
            "description": "Company business unit ID (DK only).",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "companyId": {
            "type": "string",
            "description": "Company ID",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "email": {
            "type": "string",
            "description": "Company main email.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "homePage": {
            "type": "string",
            "description": "Company main internet home page.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "marketingProtection": {
            "type": "boolean",
            "description": "Central Business Register (Denmark) marked company as protected against being contacted for advertisement purpose\r\nApplicable only for Denmark.",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "Company name.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "profession": {
            "type": "string",
            "description": "The profession associated with this listing node.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "phoneNumbers": {
            "$ref": "#/components/schemas/TelephoneNumbers"
          },
          "textLine": {
            "$ref": "#/components/schemas/ListingTextLine"
          },
          "subListings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Listing"
            },
            "description": "The children of this listing tree node. Circular relationship",
            "nullable": true,
            "xml": {
              "name": "subListings",
              "wrapped": true
            }
          }
        },
        "additionalProperties": false,
        "description": "Company listing data as it appears in the paper catalogue. The listings are a composite tree structure of arbitrary\r\nwidth and depth.\r\nThe email, homepage and telephone number fields are mutually exclusive, so only one of them will appear in a single\r\nlisting node.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "SocialMediaLinks": {
        "type": "object",
        "properties": {
          "facebookUrl": {
            "type": "string",
            "description": "The facebook URL of the company",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "googlePlusUrl": {
            "type": "string",
            "description": "The google plus URL of the company",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "linkedInUrl": {
            "type": "string",
            "description": "LinkedIn URL",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "twitterUrl": {
            "type": "string",
            "description": "Twitter URL",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "youtubeUrl": {
            "type": "string",
            "description": "Youtube URL",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "Social Media links for the company",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Office": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of office.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "type": {
            "type": "string",
            "description": "Type of office.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "numbers": {
            "$ref": "#/components/schemas/TelephoneNumbers"
          },
          "officePostalAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "officeVisitorAddress": {
            "$ref": "#/components/schemas/Address"
          }
        },
        "additionalProperties": false,
        "description": "An Office of a company.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "DayOpeningHours": {
        "type": "object",
        "properties": {
          "allDay": {
            "type": "boolean",
            "description": "true status flag if the company is open the whole day this particular day, and false otherwise.",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "closed": {
            "type": "boolean",
            "description": "true status flag if the company is closed the whole day this particular day, and false otherwise.",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "closingHour": {
            "type": "string",
            "description": "The hour the company closes a particular day. Must be combined with ClosingMinutes to get a complete time.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "closingMinutes": {
            "type": "string",
            "description": "The minutes the company closes a particular day. Must be combined with ClosingHour to get a complete time.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "openHours": {
            "type": "boolean",
            "description": "true status flag if the company has opening hours this particular day. Use a combination of OpeningHour +  OpeningMinutes and ClosingHour + ClosingMinutes to calculate the exact interval of the opening hours.",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "openingHour": {
            "type": "string",
            "description": "The hour the company opens a particular day. Must be combined with OpeningMinutes to get a complete time.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "openingMinutes": {
            "type": "string",
            "description": "The minutes the company opens a particular day. Must be combined with OpeningHour to get a complete time.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "The opening hours of a company for a particular day.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "OpeningHours": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "An Office of a company.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "friday": {
            "$ref": "#/components/schemas/DayOpeningHours"
          },
          "monday": {
            "$ref": "#/components/schemas/DayOpeningHours"
          },
          "saturday": {
            "$ref": "#/components/schemas/DayOpeningHours"
          },
          "sunday": {
            "$ref": "#/components/schemas/DayOpeningHours"
          },
          "thursday": {
            "$ref": "#/components/schemas/DayOpeningHours"
          },
          "tuesday": {
            "$ref": "#/components/schemas/DayOpeningHours"
          },
          "wednesday": {
            "$ref": "#/components/schemas/DayOpeningHours"
          }
        },
        "additionalProperties": false,
        "description": "Information about a company's opening hours. Contains a textual description and/or detailed information for each day of the week.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "ReferenceCustomers": {
        "type": "object",
        "properties": {
          "informationUrl": {
            "type": "string",
            "description": "A url to information about the reference customers of a company.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "referenceCustomerNames": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "SchemaFilterContext"
              }
            },
            "description": "Get a list of the names of the reference customers of a company.",
            "nullable": true,
            "xml": {
              "name": "referenceCustomerNames",
              "wrapped": true
            }
          }
        },
        "additionalProperties": false,
        "description": "Information about a company's reference customers.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Reference": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the company",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "orgNumber": {
            "type": "string",
            "description": "The org number of the company",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "Reference of the company",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "References": {
        "type": "object",
        "properties": {
          "informationUrl": {
            "type": "string",
            "description": "The information url of the company",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "referencesList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reference"
            },
            "description": "Reference of the company",
            "nullable": true,
            "xml": {
              "name": "referencesList",
              "wrapped": true
            }
          }
        },
        "additionalProperties": false,
        "description": "References of the company",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Announcement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique id of the announcement.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "date": {
            "type": "string",
            "description": "The date of the announcement. Standard ECS format.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "text": {
            "type": "string",
            "description": "The text of the announcement.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "type": {
            "type": "string",
            "description": "The type (code) of the announcement.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "An announcement from a company.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "AnnualReport": {
        "type": "object",
        "properties": {
          "fingerprint": {
            "type": "string",
            "description": "report file fingerprint.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "period": {
            "type": "string",
            "description": "report period. (year and month YYYY-MM format)",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "An annual report for a company.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "AnnualMain": {
        "type": "object",
        "properties": {
          "accIncompleteCode": {
            "type": "string",
            "description": "The code for the account being incomplete",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "accIncompleteDesc": {
            "type": "string",
            "description": "The comment description for the account being incomplete",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "auditorClarificationComment": {
            "type": "string",
            "description": "Auditor clarification comment",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "auditorName": {
            "type": "string",
            "description": "Auditor name",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "auditorCompanyId": {
            "type": "integer",
            "description": "Auditor company id",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "auditorComment": {
            "type": "string",
            "description": "Auditors comment",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "auditorLiquidationSettlement": {
            "type": "boolean",
            "description": "Auditor Liquidation Settlement",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "ceoSalOtherComp": {
            "type": "boolean",
            "description": "Compensation to CEO that is not salary",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "clarification1": {
            "type": "boolean",
            "description": "Clarification 1",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "clarification2": {
            "type": "boolean",
            "description": "Clarification 2",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "clarification3": {
            "type": "boolean",
            "description": "Clarification 3",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "clarification4": {
            "type": "boolean",
            "description": "Clarification 4",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "clarification5": {
            "type": "boolean",
            "description": "Clarification 5",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "clarification6": {
            "type": "boolean",
            "description": "Clarification 6",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "clarification7": {
            "type": "boolean",
            "description": "Clarification 7",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "clarification8": {
            "type": "boolean",
            "description": "Clarification 8",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "clarification9": {
            "type": "boolean",
            "description": "Clarification 9",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "clarification10": {
            "type": "boolean",
            "description": "Clarification 10",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "clarification14": {
            "type": "boolean",
            "description": "Clarification 14",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "clarification15": {
            "type": "boolean",
            "description": "Clarification 15",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "clarification16": {
            "type": "boolean",
            "description": "Clarification 16",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "clarification17": {
            "type": "boolean",
            "description": "Clarification 17",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "clarification18": {
            "type": "boolean",
            "description": "Clarification 18",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "compensationPackage": {
            "type": "boolean",
            "description": "Compensation Package",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "currency": {
            "type": "string",
            "description": "The code for the currency the account amounts are in.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "disclamer1": {
            "type": "boolean",
            "description": "Disclamer 1",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "disclamer2": {
            "type": "boolean",
            "description": "Disclamer 2",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "disclamer3": {
            "type": "boolean",
            "description": "Disclamer 3",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "disclamer4": {
            "type": "boolean",
            "description": "Disclamer 4",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "disclamer5": {
            "type": "boolean",
            "description": "Disclamer 5",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "disclamer6": {
            "type": "boolean",
            "description": "Disclamer 6",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "disclamer7": {
            "type": "boolean",
            "description": "Disclamer 7",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "disclamer8": {
            "type": "boolean",
            "description": "Disclamer 8",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "disclamer9": {
            "type": "boolean",
            "description": "Disclamer 9",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "disclamer10": {
            "type": "boolean",
            "description": "Disclamer 10",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "disclamer11": {
            "type": "boolean",
            "description": "Disclamer 11",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "disclamer12": {
            "type": "boolean",
            "description": "Disclamer 12",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "disclamer13": {
            "type": "boolean",
            "description": "Disclamer 13",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "disclamer14": {
            "type": "boolean",
            "description": "Disclamer 14",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "disclamer15": {
            "type": "boolean",
            "description": "Disclamer 15",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "disclamer17": {
            "type": "boolean",
            "description": "Disclamer 17",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "disclamer18": {
            "type": "boolean",
            "description": "Disclamer 18",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "disclamer19": {
            "type": "boolean",
            "description": "Disclamer 19",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "employees": {
            "type": "integer",
            "description": "Employees",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "equityLessThanFiftyPercentShare": {
            "type": "boolean",
            "description": "Company's equity is less than 50% of the called up share capital",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "equityLoss": {
            "type": "boolean",
            "description": "Equity loss",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "givenLoanConf87": {
            "type": "boolean",
            "description": "GivenLoanConf87",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "haveOtpNoNumbers": {
            "type": "boolean",
            "description": "HaveOtpNoNumbers",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "length": {
            "type": "string",
            "description": "Accounting reported period. Number of months.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "limitedOperation": {
            "type": "boolean",
            "description": "LimitedOperation",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "liquidationAccounting": {
            "type": "boolean",
            "description": "LiquidationAccounting",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "manLabourYear": {
            "type": "number",
            "description": "ManLabourYear",
            "format": "double",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "noOperation": {
            "type": "boolean",
            "description": "NoOperation",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "notDutyOtp": {
            "type": "boolean",
            "description": "NotDutyOtp",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "operationsConsideredNotPresent": {
            "type": "boolean",
            "description": "OperationsConsideredNotPresent",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "optionsBonus": {
            "type": "boolean",
            "description": "OptionsBonus",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "partTimeEmployees": {
            "type": "number",
            "description": "PartTimeEmployees",
            "format": "double",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "period": {
            "type": "string",
            "description": "Accounting reported period. (year and month YYYY-MM format)",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "shareFiftyPercentLoss": {
            "type": "boolean",
            "description": "Share Fifty Percent Loss",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "shareLoss": {
            "type": "boolean",
            "description": "ShareLoss",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "shareTwoThirdsLoss": {
            "type": "boolean",
            "description": "ShareTwoThirdsLoss",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "underLiquidation": {
            "type": "boolean",
            "description": "UnderLiquidation",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "year": {
            "type": "integer",
            "description": "The year this annual info is for.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "An annual state for a company or an enterprise.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "RegisterCompanyRole": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "description": "The organisation number of the company that has this role.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "elector": {
            "type": "string",
            "description": "The name of the entity that elected this role.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "The name of the entity that has this role.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "responsibility": {
            "type": "string",
            "description": "The responsibility of this role.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "title": {
            "type": "string",
            "description": "The title of the role.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "details": {
            "$ref": "#/components/schemas/Link"
          }
        },
        "additionalProperties": false,
        "description": "A role a company has in a register company.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "MainOffice": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "description": "The organisation number of this subsidiary.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "The registered name of the main office.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "details": {
            "$ref": "#/components/schemas/Link"
          }
        },
        "additionalProperties": false,
        "description": "The main office of a company that has several branches.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "RegisterPersonRole": {
        "type": "object",
        "properties": {
          "birthDate": {
            "type": "string",
            "description": "The birth date of the person who has this role. On standard ECS format.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "elector": {
            "type": "string",
            "description": "The name of the entity that elected this role.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "The name of the entity that has this role.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "personId": {
            "type": "string",
            "description": "Person Id",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "responsibility": {
            "type": "string",
            "description": "The responsibility of this role.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "title": {
            "type": "string",
            "description": "The title of the role.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "titleCode": {
            "type": "string",
            "description": "The title code of the role.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "postalAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "details": {
            "$ref": "#/components/schemas/Link"
          }
        },
        "additionalProperties": false,
        "description": "A role a person has in a register company.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Shareholder": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "description": "The organisation number of this shareholder.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "firstName": {
            "type": "string",
            "description": "The first name of this shareholder.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "lastName": {
            "type": "string",
            "description": "The last name of this shareholder.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "The name of this shareholder.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "numberOfShares": {
            "type": "number",
            "description": "The number of shares this shareholder owns in the company.",
            "format": "double",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "share": {
            "type": "string",
            "description": "The percentage of the total number of company shares that is owned by this shareholder. Formatted for view.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "details": {
            "$ref": "#/components/schemas/Link"
          }
        },
        "additionalProperties": false,
        "description": "A shareholder in a company. Can be a person or a company.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Signature": {
        "type": "object",
        "properties": {
          "birthDate": {
            "type": "string",
            "description": "birth date in ISO format yyyy-MM-dd",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "lineNumber": {
            "type": "integer",
            "description": "line number in Signature right/Procuration text list",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "The full name of the person.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "roleId": {
            "type": "string",
            "description": "role id such as SIGN, SIHV, SIFE or PROK, POHV, POFE",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "personId": {
            "type": "string",
            "description": "Person Id",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "details": {
            "$ref": "#/components/schemas/Link"
          },
          "postalAddress": {
            "$ref": "#/components/schemas/Address"
          }
        },
        "additionalProperties": false,
        "description": "Signature / Procuration role",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Subsidiary": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "description": "The organisation number of this subsidiary.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "The name of this subsidiary.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "ownedPercentage": {
            "type": "number",
            "description": "How much the parent owns of this subsidiary",
            "format": "double",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "details": {
            "$ref": "#/components/schemas/Link"
          }
        },
        "additionalProperties": false,
        "description": "A subsidiary of a company.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "AnalysisSection": {
        "type": "object",
        "properties": {
          "antallAnsatte": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "loennskostnader": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "andreDriftskostnader": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "avskrivingVarigeDriftsmidlerImEiend": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "sumDriftsinntekter": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "driftsresultat": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "ordinaertResultatFoerSkattekostnad": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "ordinaertResultat": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "aarsresultat": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "sumAnleggsmidler": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "sumOmloepsmidler": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "sumEiendeler": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "sumEgenkapital": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "sumKortsiktigGjeld": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "sumLangsiktigGjeld": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "sumEgenkapitalOgGjeld": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "resultatgrad": {
            "type": "number",
            "format": "double",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "rentedeknGrad": {
            "type": "number",
            "format": "double",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "totalrentabilitetLoennsomhet": {
            "type": "number",
            "format": "double",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "egenkapitalRentabilitetFoerSkatt": {
            "type": "number",
            "format": "double",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "egenkapitalandel": {
            "type": "number",
            "format": "double",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "tapsbuffer": {
            "type": "number",
            "format": "double",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "likviditetsgrad": {
            "type": "number",
            "format": "double",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "likviditetsgrad2": {
            "type": "number",
            "format": "double",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "arbeidskapital": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "langsiktigLagerfinansiering": {
            "type": "number",
            "format": "double",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "fremmedkapitalkostnad": {
            "type": "number",
            "format": "double",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "gjeldsgrad": {
            "type": "number",
            "format": "double",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "gjennomsnittligLagertidDager": {
            "type": "number",
            "format": "double",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "gjennomsnittligKredittidForDebitorer": {
            "type": "number",
            "format": "double",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "gjennomsnittligKredittForLeverandoer": {
            "type": "number",
            "format": "double",
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Analysis": {
        "type": "object",
        "properties": {
          "konsern": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "accountingYear": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "companyFigures": {
            "$ref": "#/components/schemas/AnalysisSection"
          },
          "countyFigures": {
            "$ref": "#/components/schemas/AnalysisSection"
          },
          "countryFigures": {
            "$ref": "#/components/schemas/AnalysisSection"
          },
          "asCountryFigures": {
            "$ref": "#/components/schemas/AnalysisSection"
          }
        },
        "additionalProperties": false,
        "description": "Comparison of company and industry on county- and country basis",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "ShortAnalysisSection": {
        "type": "object",
        "properties": {
          "finansieringsgrad1": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "kapitalensOmloepshastighet": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "resultatAvDriften": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "omsetningPerLoennskrone": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "bruttofortjeneste": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "omsetningPerAnsatt": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "ShortAnalysis": {
        "type": "object",
        "properties": {
          "accountingYear": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "konsern": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "antallBedrifterBransjeFylke": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "companyFigures": {
            "$ref": "#/components/schemas/ShortAnalysisSection"
          },
          "countyFigures": {
            "$ref": "#/components/schemas/ShortAnalysisSection"
          },
          "countryFigures": {
            "$ref": "#/components/schemas/ShortAnalysisSection"
          },
          "asCountryFigures": {
            "$ref": "#/components/schemas/ShortAnalysisSection"
          }
        },
        "additionalProperties": false,
        "description": "Short comparison of company and industry on county- and country basis",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Trial": {
        "type": "object",
        "properties": {
          "scheduled": {
            "type": "string",
            "description": "Date the trial was/will be held",
            "format": "date-time",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "court": {
            "type": "string",
            "description": "Where the trial will take place",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "summary": {
            "type": "string",
            "description": "Free text description the trial",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "parties": {
            "type": "string",
            "description": "Free text description of parties involved",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "reference": {
            "type": "string",
            "description": "A reference to the trial",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "registered": {
            "type": "string",
            "description": "When the trial was registered",
            "format": "date-time",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "type": {
            "type": "string",
            "description": "The type of the trial (typically 3 letter code like KON, TVI, ERS)",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "role": {
            "type": "string",
            "description": "Saksøker (Plaintiff) eller Saksøkt (Defendant)",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "Details about a judicial trial",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Mortgage": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Types of mortgages, Leasing (LA), factoring agreements (FA) ect.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "groupType": {
            "type": "string",
            "description": "The group type of mortgage, Voluntary (F), Forced (T) or other (A)",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "creditor": {
            "type": "string",
            "description": "Name of the creditor",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "date": {
            "type": "string",
            "description": "Mortgage registration date",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "lastModified": {
            "type": "string",
            "description": "",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "amount": {
            "type": "integer",
            "description": "The amount of the mortgage",
            "format": "int64",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "MortgageSize": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "The count of the aggregated mortgage type",
            "format": "int64",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "sum": {
            "type": "integer",
            "description": "The sum of the aggregated mortgage type",
            "format": "int64",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "MortgageOverview": {
        "type": "object",
        "properties": {
          "voluntary": {
            "$ref": "#/components/schemas/MortgageSize"
          },
          "compulsory": {
            "$ref": "#/components/schemas/MortgageSize"
          },
          "other": {
            "$ref": "#/components/schemas/MortgageSize"
          }
        },
        "additionalProperties": false,
        "description": "Mortages Overview",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "MortgagesRegistration": {
        "type": "object",
        "properties": {
          "mortgages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Mortgage"
            },
            "description": "A list of mortgages types",
            "nullable": true,
            "xml": {
              "name": "mortgages",
              "wrapped": true
            }
          },
          "mortgagesOverview": {
            "$ref": "#/components/schemas/MortgageOverview"
          }
        },
        "additionalProperties": false,
        "description": "Mortgages registration overview",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "ApprovalStatus": {
        "type": "object",
        "properties": {
          "approved": {
            "type": "boolean",
            "description": "\"true\" if the company is approved by Direktoratet for byggkvalitet - \"Godkjent for ansvarsrett\" before or after 01.01.2016",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "\"true\" if the company is approved by Direktoratet for byggkvalitet - \"Godkjent for ansvarsrett\" before or after 01.01.2016",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "CentralApproval": {
        "type": "object",
        "properties": {
          "approvalStatus": {
            "$ref": "#/components/schemas/ApprovalStatus"
          }
        },
        "additionalProperties": false,
        "description": "\"true\" if the company is approved by Direktoratet for byggkvalitet - \"Godkjent for ansvarsrett\" before or after 01.01.2016",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "CorporateStructureSummary": {
        "type": "object",
        "properties": {
          "details": {
            "$ref": "#/components/schemas/Link"
          },
          "numberOfCompanies": {
            "type": "integer",
            "description": "Total number of companies that are part of the corporate structure.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "numberOfSubsidiaries": {
            "type": "integer",
            "description": "Number of direct subsidiaries of the current company.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "parentCompanyName": {
            "type": "string",
            "description": "Name of the closest parent company.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "parentCompanyOrganisationNumber": {
            "type": "string",
            "description": "Organisation number of the closest parent company.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "parentCompanyLink": {
            "$ref": "#/components/schemas/Link"
          }
        },
        "additionalProperties": false,
        "description": "Summary of the corporate structure a company is part of.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "KeyFigures": {
        "type": "object",
        "properties": {
          "businessCategoryRatingSdi": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "businessCategoryRatingEmployees": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "numberOfCompaniesInBusinessCategory": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "countyRatingSdi": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "countyRatingEmployees": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "numberOfCompaniesInCountyAccounting": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "numberOfCompaniesInCountyEmployees": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "municipalityRatingSdi": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "municipalityRatingEmployees": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "numberOfCompaniesInMunicipalityAccounting": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "numberOfCompaniesInMunicipalityEmployees": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Status": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A description of the status the company has in the business register.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "statusFlag": {
            "type": "string",
            "description": "Register status flag for a company.\r\nPossible values:\r\n<value>ACTIVE</value><value>INACTIVE</value>",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "statusDate": {
            "type": "string",
            "description": "Status date in yyyy-MM-dd format",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "The legal status of a company.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "RegisterCompanyDetails": {
        "type": "object",
        "properties": {
          "companyType": {
            "type": "string",
            "description": "The organisation type of this company. Type codes will wary from country to country. Some examples of Norwegian\r\ncodes: \"AS\", \"ANS\", \"EP\" and \"NUF\".",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "companyTypeName": {
            "type": "string",
            "description": "The human readable company type name It should be something like Aksjeselskap for instance if the type is AS",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "estimatedTurnover": {
            "type": "string",
            "description": "Estimated turnover.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "hasSecurity": {
            "type": "boolean",
            "description": "Whether or not this company has some assets that has been used for security.\r\nFor example when acquiring a loan. null if security status is unknown.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "previousNames": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "SchemaFilterContext"
              }
            },
            "description": "The names the company has had in the past.",
            "nullable": true,
            "xml": {
              "name": "previousNames",
              "wrapped": true
            }
          },
          "proffListingId": {
            "type": "string",
            "description": "Preferred Proff listing-ID used when redirecting from register company to Proff company.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "registeredAsEnterprise": {
            "type": "boolean",
            "description": "Whether or not this company is registered as an enterprise.\r\nFor Norway this indicates whether or not the company is registered in \"Foretaksregisteret\".\r\nNull if enterprise status is unknown.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "registeredForNav": {
            "type": "boolean",
            "description": "Whether or not this company is registered for NAV.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "registeredForPayrollTax": {
            "type": "boolean",
            "description": "Whether or not this company is registered for VAT.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "registeredForVat": {
            "type": "boolean",
            "description": "Whether or not this company is registered for VAT.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "registeredForVatDescription": {
            "type": "string",
            "description": "VAT description, if any. Applies only to Swedish companies. E.g.: \"Ja, registrerad f�r F-skatt\".",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "registeredForVoluntary": {
            "type": "boolean",
            "description": "Whether or not this company is registered for voluntary registry.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "registrationDate": {
            "type": "string",
            "description": "The date the company was registered with the registry. On standard ECS format.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "shareCapital": {
            "type": "integer",
            "description": "The share capital of this company null if not available",
            "format": "int64",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "shareholdersLastUpdatedDate": {
            "type": "string",
            "description": "Company shareholders' last updated date in YYYY-MM-DD format (ISO-8601 reduced accuracy allowed). Can be null",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "subsidiariesLastUpdatedDate": {
            "type": "string",
            "description": "Company subsidiaries' last updated date in YYYY-MM-DD format (ISO-8601 reduced accuracy allowed). Can be null",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "yearsInOperation": {
            "type": "integer",
            "description": "The number of years this company has been in business or null if not available.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "announcements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Announcement"
            },
            "description": "An announcement from a company.",
            "nullable": true,
            "xml": {
              "name": "announcements",
              "wrapped": true
            }
          },
          "annualAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnnualAccount"
            },
            "description": "An annual account for a company or an enterprise.",
            "nullable": true,
            "xml": {
              "name": "annualAccounts",
              "wrapped": true
            }
          },
          "annualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnnualReport"
            },
            "description": "An annual report for a company.",
            "nullable": true,
            "xml": {
              "name": "annualReports",
              "wrapped": true
            }
          },
          "companyAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnnualAccount"
            },
            "description": "An annual account for a company or an enterprise.",
            "nullable": true,
            "xml": {
              "name": "companyAccounts",
              "wrapped": true
            }
          },
          "companyCacheFlows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnnualAccount"
            },
            "description": "An annual account for a company or an enterprise.",
            "nullable": true,
            "xml": {
              "name": "companyCacheFlows",
              "wrapped": true
            }
          },
          "companyMain": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnnualMain"
            },
            "description": "An annual account for a company or an enterprise.",
            "nullable": true,
            "xml": {
              "name": "companyMain",
              "wrapped": true
            }
          },
          "companyRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegisterCompanyRole"
            },
            "description": "A role a company has in a register company.",
            "nullable": true,
            "xml": {
              "name": "companyRoles",
              "wrapped": true
            }
          },
          "contactPerson": {
            "$ref": "#/components/schemas/ContactPerson"
          },
          "corporateAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnnualAccount"
            },
            "description": "An annual account for a company or an enterprise.",
            "nullable": true,
            "xml": {
              "name": "corporateAccounts",
              "wrapped": true
            }
          },
          "corporateCacheFlows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnnualAccount"
            },
            "description": "An annual account for a company or an enterprise.",
            "nullable": true,
            "xml": {
              "name": "corporateCacheFlows",
              "wrapped": true
            }
          },
          "corporateMain": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnnualMain"
            },
            "description": "An annual account for a company or an enterprise.",
            "nullable": true,
            "xml": {
              "name": "corporateMain",
              "wrapped": true
            }
          },
          "mainOffice": {
            "$ref": "#/components/schemas/MainOffice"
          },
          "personRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegisterPersonRole"
            },
            "description": "A role a person has in a register company.",
            "nullable": true,
            "xml": {
              "name": "personRoles",
              "wrapped": true
            }
          },
          "shareholders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Shareholder"
            },
            "description": "A person that is a shareholder in a company.",
            "nullable": true,
            "xml": {
              "name": "shareholders",
              "wrapped": true
            }
          },
          "signatories": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "SchemaFilterContext"
              }
            },
            "description": "List of Signatories",
            "nullable": true,
            "xml": {
              "name": "signatories",
              "wrapped": true
            }
          },
          "signatoryRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Signature"
            },
            "description": "Signature roles",
            "nullable": true,
            "xml": {
              "name": "signatoryRoles",
              "wrapped": true
            }
          },
          "procuration": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "SchemaFilterContext"
              }
            },
            "description": "List of Procuration",
            "nullable": true,
            "xml": {
              "name": "procuration",
              "wrapped": true
            }
          },
          "procurationRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Signature"
            },
            "description": "Procuration roles",
            "nullable": true,
            "xml": {
              "name": "procurationRoles",
              "wrapped": true
            }
          },
          "subsidiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subsidiary"
            },
            "description": "A subsidiary of a company.",
            "nullable": true,
            "xml": {
              "name": "subsidiaries",
              "wrapped": true
            }
          },
          "creditRating": {
            "description": "A credit rating of a company.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "analyses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Analysis"
            },
            "description": "An analysis of a company",
            "nullable": true,
            "xml": {
              "name": "analyses",
              "wrapped": true
            }
          },
          "shortAnalyses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShortAnalysis"
            },
            "description": "A short analysis of a company",
            "nullable": true,
            "xml": {
              "name": "shortAnalyses",
              "wrapped": true
            }
          },
          "trials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Trial"
            },
            "description": "Recent and upcoming trials for the company",
            "nullable": true,
            "xml": {
              "name": "trials",
              "wrapped": true
            }
          },
          "mortgages": {
            "$ref": "#/components/schemas/MortgagesRegistration"
          },
          "centralApproval": {
            "$ref": "#/components/schemas/CentralApproval"
          },
          "corporateStructure": {
            "$ref": "#/components/schemas/CorporateStructureSummary"
          },
          "publicListings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicListing"
            },
            "description": "Displays listings on public stock exchanges",
            "nullable": true,
            "xml": {
              "name": "publicListings",
              "wrapped": true
            }
          },
          "keyFigures": {
            "$ref": "#/components/schemas/KeyFigures"
          },
          "businessUnitId": {
            "type": "string",
            "description": "Company business unit ID (DK only).",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "companyId": {
            "type": "string",
            "description": "Company Id",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "email": {
            "type": "string",
            "description": "Company main email.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "establishedDate": {
            "type": "string",
            "description": "Established Date",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "foundationDate": {
            "type": "string",
            "description": "Foundation Date",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "foundationYear": {
            "type": "string",
            "description": "The company's year of foundation.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "liquidationDate": {
            "type": "string",
            "description": "Liquidation Date",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "homePage": {
            "type": "string",
            "description": "Company main internet home page.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "marketingProtection": {
            "type": "boolean",
            "description": "Central Business Register (Denmark) marked company as protected against being contacted for advertisement purpose.\r\nApplicable only for Denmark.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "naceCategories": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "SchemaFilterContext"
              }
            },
            "description": "A list of NACE category information (code and name) that this company is associated with.",
            "nullable": true,
            "xml": {
              "name": "naceCategories",
              "wrapped": true
            }
          },
          "name": {
            "type": "string",
            "description": "Company name.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "numberOfEmployees": {
            "type": "string",
            "description": "A textual description of the company's total number of employees. Might be a number, a range or a free form text.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "empMin": {
            "type": "integer",
            "description": "The minimum number of employees the company has. It may be the same as EmpMax if exact number is known.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "empMax": {
            "type": "integer",
            "description": "The maximum number of employees the company has. It may be the same as EmpMin if exact number is known.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "organisationNumber": {
            "type": "string",
            "description": "Company organisation number.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "sOrganisationNumber": {
            "type": "string",
            "description": "Company secret organisation number.\r\nCompanies may have a secret/private organisation number;\r\ne.g. Swedish ENK.",
            "nullable": true,
            "readOnly": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "profit": {
            "type": "string",
            "description": "The profit for this company.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "revenue": {
            "type": "string",
            "description": "The revenue for this company.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "link": {
            "$ref": "#/components/schemas/Link"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "phoneNumbers": {
            "$ref": "#/components/schemas/TelephoneNumbers"
          },
          "postalAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "visitorAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "sectorCode": {
            "type": "string",
            "description": "Sector Code",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "companyPurpose": {
            "type": "string",
            "description": "Company purpose",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "Details for a publicly registered company.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "EniroProCompanyIndustry": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The unique code identifying this industry.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "companyId": {
            "type": "string",
            "description": "CompanyId",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "description": {
            "type": "string",
            "description": "Industry description",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "The official name of the industry. E.g. \"Hairdresser\".",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "salesRank": {
            "type": "integer",
            "description": "Sales rank reflects the amount of purchases for this industry. High rank means high amount.",
            "format": "int64",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "style": {
            "type": "string",
            "description": "Style of the industry representation. (ex. FRAMED, BOLD). Can be null",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "An industry to which companies are related, with additional customer specific data",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "TextElement": {
        "type": "object",
        "properties": {
          "element": {
            "type": "string",
            "description": "The text element. Possibly contains html markup.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "type": {
            "type": "string",
            "description": "The type of text element.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "A text element.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "TextBlock": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The text.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "title": {
            "type": "string",
            "description": "Title for the text block.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "type": {
            "type": "string",
            "description": "The type of text block.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "textElements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TextElement"
            },
            "description": "A text element.",
            "nullable": true,
            "xml": {
              "name": "textElements",
              "wrapped": true
            }
          }
        },
        "additionalProperties": false,
        "description": "A block of text describing aspects of the company.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Trade": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code for the trade.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "text": {
            "type": "string",
            "description": "Code for the trade.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "A trade this company is involved with. A trade could for example be manufacturing, service providing or consulting.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "EniroProIndustry": {
        "type": "object",
        "properties": {
          "categoryType": {
            "type": "string",
            "description": "   The category type this industry belongs to.\r\nPossible values:\r\n<value>TOPCATEGORY</value>,\r\n<value>CATEGORY</value>,\r\n<value>MAIN</value>,\r\n<value>SPECIALITY</value>",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "description": {
            "type": "string",
            "description": "Industry description",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "industryCode": {
            "type": "string",
            "description": "Industry Code",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "The official name of the industry. E.g. \"Hairdresser\".",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "numberOfCompanies": {
            "type": "integer",
            "description": "Number of companies in this industry.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "details": {
            "$ref": "#/components/schemas/Link"
          },
          "companies": {
            "$ref": "#/components/schemas/Link"
          },
          "facts": {
            "$ref": "#/components/schemas/Link"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "Industries. Circular relationship.",
            "nullable": true,
            "xml": {
              "name": "children",
              "wrapped": true
            }
          },
          "parents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "Parent industries. Circular relationship.",
            "nullable": true,
            "xml": {
              "name": "parents",
              "wrapped": true
            }
          }
        },
        "additionalProperties": false,
        "description": "An industry, any department or branch of art, occupation or business.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "SchemaFilterContext"
              }
            },
            "description": "Content of the product.",
            "nullable": true,
            "xml": {
              "name": "content",
              "wrapped": true
            }
          },
          "name": {
            "type": "string",
            "description": "The product name.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "A paid product for this company.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "ReferenceTexts": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "A text containing a reference from the current entity to another one.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "see": {
            "type": "string",
            "description": "A text containing a reference to an entity related to the current one.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "to": {
            "type": "string",
            "description": "A text containing a reference to the current entity from another one.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "Texts describing the references between an entity and other entities.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "SearchAdImage": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Search ad description.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "imageFileName": {
            "type": "string",
            "description": "Search ad image file name.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "keyword": {
            "type": "string",
            "description": "Search ad keyword.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "A search ad image associated with an company.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "RegisterCompany": {
        "type": "object",
        "properties": {
          "businessUnitId": {
            "type": "string",
            "description": "Company business unit ID (DK only).",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "companyId": {
            "type": "string",
            "description": "Company Id",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "email": {
            "type": "string",
            "description": "Company main email.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "establishedDate": {
            "type": "string",
            "description": "Established Date",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "foundationDate": {
            "type": "string",
            "description": "Foundation Date",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "foundationYear": {
            "type": "string",
            "description": "The company's year of foundation.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "liquidationDate": {
            "type": "string",
            "description": "Liquidation Date",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "homePage": {
            "type": "string",
            "description": "Company main internet home page.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "marketingProtection": {
            "type": "boolean",
            "description": "Central Business Register (Denmark) marked company as protected against being contacted for advertisement purpose.\r\nApplicable only for Denmark.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "naceCategories": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "SchemaFilterContext"
              }
            },
            "description": "A list of NACE category information (code and name) that this company is associated with.",
            "nullable": true,
            "xml": {
              "name": "naceCategories",
              "wrapped": true
            }
          },
          "name": {
            "type": "string",
            "description": "Company name.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "numberOfEmployees": {
            "type": "string",
            "description": "A textual description of the company's total number of employees. Might be a number, a range or a free form text.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "empMin": {
            "type": "integer",
            "description": "The minimum number of employees the company has. It may be the same as EmpMax if exact number is known.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "empMax": {
            "type": "integer",
            "description": "The maximum number of employees the company has. It may be the same as EmpMin if exact number is known.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "organisationNumber": {
            "type": "string",
            "description": "Company organisation number.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "sOrganisationNumber": {
            "type": "string",
            "description": "Company secret organisation number.\r\nCompanies may have a secret/private organisation number;\r\ne.g. Swedish ENK.",
            "nullable": true,
            "readOnly": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "profit": {
            "type": "string",
            "description": "The profit for this company.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "revenue": {
            "type": "string",
            "description": "The revenue for this company.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "link": {
            "$ref": "#/components/schemas/Link"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "phoneNumbers": {
            "$ref": "#/components/schemas/TelephoneNumbers"
          },
          "postalAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "visitorAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "sectorCode": {
            "type": "string",
            "description": "Sector Code",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "companyPurpose": {
            "type": "string",
            "description": "Company purpose",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "A publicly registered company.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "EniroProCompanyDetails": {
        "type": "object",
        "properties": {
          "publicListings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicListing"
            },
            "nullable": true,
            "writeOnly": true,
            "xml": {
              "name": "publicListings",
              "wrapped": true
            }
          },
          "country": {
            "type": "string",
            "description": "Country of origin for for this industry facts. A two letter uppercase ISO 3166-1-alpha-2 country code.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "dataSource": {
            "type": "string",
            "description": "The data source of this company. Known values are CUSTOMER, for paying customers. LEGAL for an external source like\r\na official register.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "dnSideboardUrl": {
            "type": "string",
            "description": "Norwegian ONLY",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "dnTopboardUrl": {
            "type": "string",
            "description": "Norwegian ONLY",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "SchemaFilterContext"
              }
            },
            "description": "The search related keywords associated with this company.",
            "nullable": true,
            "xml": {
              "name": "keywords",
              "wrapped": true
            }
          },
          "suboffice": {
            "type": "boolean",
            "description": "If record represents suboffice",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "warrantiesDescription": {
            "type": "string",
            "description": "A textual description of the warranties that a company offers.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "externalLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalLink"
            },
            "description": "External links.",
            "nullable": true,
            "xml": {
              "name": "externalLinks",
              "wrapped": true
            }
          },
          "webshopUrl": {
            "type": "string",
            "description": "Web shop URL.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "brochure": {
            "$ref": "#/components/schemas/Brochure"
          },
          "certifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Certification"
            },
            "description": "A certificate that this company has.",
            "nullable": true,
            "xml": {
              "name": "certifications",
              "wrapped": true
            }
          },
          "contactPersons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactPerson"
            },
            "description": "A contact person for a company.",
            "nullable": true,
            "xml": {
              "name": "contactPersons",
              "wrapped": true
            }
          },
          "contactFormUrl": {
            "type": "string",
            "description": "A contact form URL for a company.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "dealers": {
            "$ref": "#/components/schemas/Dealers"
          },
          "distributors": {
            "$ref": "#/components/schemas/Distributors"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "description": "Meta information about an image.",
            "nullable": true,
            "xml": {
              "name": "images",
              "wrapped": true
            }
          },
          "listing": {
            "$ref": "#/components/schemas/Listing"
          },
          "mediaLinks": {
            "$ref": "#/components/schemas/SocialMediaLinks"
          },
          "offices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Office"
            },
            "description": "An Office of a company.",
            "nullable": true,
            "xml": {
              "name": "offices",
              "wrapped": true
            }
          },
          "openingHours": {
            "$ref": "#/components/schemas/OpeningHours"
          },
          "referenceCustomers": {
            "$ref": "#/components/schemas/ReferenceCustomers"
          },
          "references": {
            "$ref": "#/components/schemas/References"
          },
          "registerListing": {
            "$ref": "#/components/schemas/RegisterCompany"
          },
          "registerOwnListing": {
            "$ref": "#/components/schemas/RegisterCompanyDetails"
          },
          "subIndustries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EniroProCompanyIndustry"
            },
            "description": "An industry to which companies are related, with additional customer specific data",
            "nullable": true,
            "xml": {
              "name": "subIndustries",
              "wrapped": true
            }
          },
          "textBlocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TextBlock"
            },
            "description": "A block of text describing aspects of the company.",
            "nullable": true,
            "xml": {
              "name": "textBlocks",
              "wrapped": true
            }
          },
          "trades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Trade"
            },
            "description": "A trade this company is involved with. A trade could for example be manufacturing, service providing or consulting.",
            "nullable": true,
            "xml": {
              "name": "trades",
              "wrapped": true
            }
          },
          "advertType": {
            "type": "string",
            "description": "Type of advert this company listing is.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "businessUnitId": {
            "type": "string",
            "description": "Company business unit ID (DK only).",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "companyId": {
            "type": "string",
            "description": "Company Id",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "customerId": {
            "type": "string",
            "description": "The company customer id.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "description": {
            "type": "string",
            "description": "A promotional description of the company.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "email": {
            "type": "string",
            "description": "Company main email.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "homePage": {
            "type": "string",
            "description": "Company main internet home page.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "lineId": {
            "type": "string",
            "description": "The unique Norwegian id for this company.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "listingId": {
            "type": "string",
            "description": "The id of the listing this company belongs to.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "listingType": {
            "type": "string",
            "description": "The Type of this company listing.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "marketingProtection": {
            "type": "boolean",
            "description": "Central Business Register (Denmark) marked company as protected against being contacted for advertisement purpose\r\nApplicable only for Denmark.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "Company name.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "organisationNumber": {
            "type": "string",
            "description": "Company organisation number.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "sOrganisationNumber": {
            "type": "string",
            "description": "Company secret organisation number.\r\nCompanies may have a secret/private organisation number;\r\ne.g. Swedish ENK.",
            "nullable": true,
            "readOnly": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "rank": {
            "type": "number",
            "description": "The rank of this company in the context of a search result.",
            "format": "double",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "salesRank": {
            "type": "integer",
            "description": "Sales rank reflects the amount of purchases for this company. High rank means high amount.",
            "format": "int64",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "currentIndustry": {
            "$ref": "#/components/schemas/EniroProIndustry"
          },
          "link": {
            "$ref": "#/components/schemas/Link"
          },
          "industries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EniroProCompanyIndustry"
            },
            "description": "An industry to which companies are related, with additional customer specific data",
            "nullable": true,
            "xml": {
              "name": "industries",
              "wrapped": true
            }
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "mainImage": {
            "$ref": "#/components/schemas/Image"
          },
          "phoneNumbers": {
            "$ref": "#/components/schemas/TelephoneNumbers"
          },
          "postalAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            },
            "description": "A paid product for this company.",
            "nullable": true,
            "xml": {
              "name": "products",
              "wrapped": true
            }
          },
          "referenceTexts": {
            "$ref": "#/components/schemas/ReferenceTexts"
          },
          "searchAdImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchAdImage"
            },
            "description": "A search ad image associated with an company.",
            "nullable": true,
            "xml": {
              "name": "searchAdImages",
              "wrapped": true
            }
          },
          "visitorAddress": {
            "$ref": "#/components/schemas/Address"
          }
        },
        "additionalProperties": false,
        "description": "An more detailed EniroPro company advert.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "EniroProCompany": {
        "type": "object",
        "properties": {
          "advertType": {
            "type": "string",
            "description": "Type of advert this company listing is.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "businessUnitId": {
            "type": "string",
            "description": "Company business unit ID (DK only).",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "companyId": {
            "type": "string",
            "description": "Company Id",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "customerId": {
            "type": "string",
            "description": "The company customer id.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "description": {
            "type": "string",
            "description": "A promotional description of the company.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "email": {
            "type": "string",
            "description": "Company main email.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "homePage": {
            "type": "string",
            "description": "Company main internet home page.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "lineId": {
            "type": "string",
            "description": "The unique Norwegian id for this company.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "listingId": {
            "type": "string",
            "description": "The id of the listing this company belongs to.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "listingType": {
            "type": "string",
            "description": "The Type of this company listing.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "marketingProtection": {
            "type": "boolean",
            "description": "Central Business Register (Denmark) marked company as protected against being contacted for advertisement purpose\r\nApplicable only for Denmark.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "Company name.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "organisationNumber": {
            "type": "string",
            "description": "Company organisation number.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "sOrganisationNumber": {
            "type": "string",
            "description": "Company secret organisation number.\r\nCompanies may have a secret/private organisation number;\r\ne.g. Swedish ENK.",
            "nullable": true,
            "readOnly": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "rank": {
            "type": "number",
            "description": "The rank of this company in the context of a search result.",
            "format": "double",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "salesRank": {
            "type": "integer",
            "description": "Sales rank reflects the amount of purchases for this company. High rank means high amount.",
            "format": "int64",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "currentIndustry": {
            "$ref": "#/components/schemas/EniroProIndustry"
          },
          "link": {
            "$ref": "#/components/schemas/Link"
          },
          "industries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EniroProCompanyIndustry"
            },
            "description": "An industry to which companies are related, with additional customer specific data",
            "nullable": true,
            "xml": {
              "name": "industries",
              "wrapped": true
            }
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "mainImage": {
            "$ref": "#/components/schemas/Image"
          },
          "phoneNumbers": {
            "$ref": "#/components/schemas/TelephoneNumbers"
          },
          "postalAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            },
            "description": "A paid product for this company.",
            "nullable": true,
            "xml": {
              "name": "products",
              "wrapped": true
            }
          },
          "referenceTexts": {
            "$ref": "#/components/schemas/ReferenceTexts"
          },
          "searchAdImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchAdImage"
            },
            "description": "A search ad image associated with an company.",
            "nullable": true,
            "xml": {
              "name": "searchAdImages",
              "wrapped": true
            }
          },
          "visitorAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "registerListing": {
            "$ref": "#/components/schemas/RegisterCompany"
          }
        },
        "additionalProperties": false,
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "EniroProCompanyList": {
        "type": "object",
        "properties": {
          "companies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EniroProCompany"
            },
            "description": "List of EniroPro companies",
            "nullable": true,
            "xml": {
              "name": "companies",
              "wrapped": true
            }
          },
          "correctedQuery": {
            "type": "string",
            "description": "A possible rewrite of the query string made by the search engine. The search result typically reflects this\r\nrewritten query",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "numberOfHits": {
            "type": "integer",
            "description": "Total number of hits available.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "filterGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterGroup"
            },
            "description": "A set of related filters. The display name is a common description for all the filters in the group. I.e. if the display name in the filter group is: 'Countrypart' then you can expect all filters to represent a particular country part like: Nord-Norge (North of Norway) or Vestlandet.",
            "nullable": true,
            "xml": {
              "name": "filterGroups",
              "wrapped": true
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "additionalProperties": false,
        "description": "List of EniroPro company adverts, plus resource meta data, pagination and filter information.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "FinancialInfo": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The code for the type of this account.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "amount": {
            "type": "string",
            "description": "The amount for this account.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "year": {
            "type": "string",
            "description": "Year for this financial info. In standard ECS format.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "Annual financial info for an attribute of an industry.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "TopEmployeesCompany": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "description": "Internal id of the company",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "Name of the company",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "numberOfEmployees": {
            "type": "integer",
            "description": "Number of employees.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "year": {
            "type": "string",
            "description": "Year for which the values of this top company is valid. In standard ECS format.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "details": {
            "$ref": "#/components/schemas/Link"
          }
        },
        "additionalProperties": false,
        "description": "An top employer in an industry. A company that is among the ones with the most employees in the industry.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "TopTurnoverCompany": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "description": "Internal id of the company",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "Name of the company",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "turnover": {
            "type": "integer",
            "description": "Turnover for the company, as an exact value, in the currency used by the country the industry resides in",
            "format": "int64",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "year": {
            "type": "string",
            "description": "Year for which the values of this top company is valid. In standard ECS format.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "details": {
            "$ref": "#/components/schemas/Link"
          }
        },
        "additionalProperties": false,
        "description": "Top turnover company in an industry",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "EniroProIndustryFacts": {
        "type": "object",
        "properties": {
          "categoryType": {
            "type": "string",
            "description": "The category type this industry belongs to.\r\nPossible values:\r\n<value>TOPCATEGORY</value>\r\n,\r\n<value>CATEGORY</value>\r\n,\r\n<value>MAIN</value>\r\n,\r\n<value>SPECIALITY</value>",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "country": {
            "type": "string",
            "description": "Country of origin for for this industry facts. A two letter uppercase ISO 3166-1-alpha-2 country code.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "description": {
            "type": "string",
            "description": "Industry description",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "industryCode": {
            "type": "string",
            "description": "Industry Code",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "The official name of the industry. E.g. \"Hairdresser\".",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "numberOfCompanies": {
            "type": "integer",
            "description": "Number of companies in this industry.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EniroProIndustry"
            },
            "description": "An industry, any department or branch of art, occupation or business.",
            "nullable": true,
            "xml": {
              "name": "children",
              "wrapped": true
            }
          },
          "link": {
            "$ref": "#/components/schemas/Link"
          },
          "financialInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialInfo"
            },
            "description": "Annual financial info for an attribute of an industry.",
            "nullable": true,
            "xml": {
              "name": "financialInfo",
              "wrapped": true
            }
          },
          "parents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EniroProIndustry"
            },
            "description": "Parent industries. Circular relationship.",
            "nullable": true,
            "xml": {
              "name": "parents",
              "wrapped": true
            }
          },
          "topEmployeesCompanies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TopEmployeesCompany"
            },
            "description": "An top employer in an industry. A company that is among the ones with the most employees in the industry.",
            "nullable": true,
            "xml": {
              "name": "topEmployeesCompanies",
              "wrapped": true
            }
          },
          "topTurnoverCompany": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TopTurnoverCompany"
            },
            "description": "An top employer in an industry. A company that is among the ones with the most employees in the industry.",
            "nullable": true,
            "xml": {
              "name": "topTurnoverCompany",
              "wrapped": true
            }
          },
          "companies": {
            "$ref": "#/components/schemas/Link"
          }
        },
        "additionalProperties": false,
        "description": "An industry, any department or branch of art, occupation or business.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "RegisterBusinessCategory": {
        "type": "object",
        "properties": {
          "businessCategoryType": {
            "type": "string",
            "description": "TBusiness category type (e.g. \"NACE\")",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "countryId": {
            "type": "string",
            "description": "CountryId",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "groupId": {
            "type": "string",
            "description": "CountryId",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "groupText": {
            "type": "string",
            "description": "Group Text",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "id": {
            "type": "string",
            "description": "Id",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "text": {
            "type": "string",
            "description": "Text",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "RegisterBusinessCategoryDTO",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "CompanyNode": {
        "type": "object",
        "properties": {
          "organisationNumber": {
            "type": "string",
            "description": "Company organisation number.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "Company name.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "countryCode": {
            "type": "string",
            "description": "Company country. Uppercase ISO 3166-1-alpha-2 country code.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "ownedPercentage": {
            "type": "number",
            "description": "Percentage of the company shares owned by it's parent.",
            "format": "double",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "inactiveDate": {
            "type": "string",
            "description": "If a company is inactive this field has the inactivation date. ISO 8601 date format.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "sub": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyNode"
            },
            "description": "Companies that this company has more than 50% ownership in, e.g. subsidiaries.",
            "nullable": true,
            "xml": {
              "name": "sub",
              "wrapped": true
            }
          },
          "companyAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnnualAccount"
            },
            "description": "Annual account information for the company. Note that the structure is just a summary with a selection of important accounting figures for the most recent years.",
            "nullable": true,
            "xml": {
              "name": "companyAccounts",
              "wrapped": true
            }
          },
          "link": {
            "$ref": "#/components/schemas/Link"
          }
        },
        "additionalProperties": false,
        "description": "Company that is part of a corporate structure.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "CorporateStructure": {
        "type": "object",
        "properties": {
          "tree": {
            "$ref": "#/components/schemas/CompanyNode"
          },
          "corporateAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnnualAccount"
            },
            "description": "Corporate account information for the parent company. Note that the structure is just a summary with a\r\nselection of important accounting figures for the most recent years.",
            "nullable": true,
            "xml": {
              "name": "corporateAccounts",
              "wrapped": true
            }
          }
        },
        "additionalProperties": false,
        "description": "Corporate structure for a company. The corporate structure is based on share-ownership, where a company is defined\r\nas being a subsidiary if a parent company controls more than 50% of the shares (independent of share classification).",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "RegisterCompanyList": {
        "type": "object",
        "properties": {
          "companies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegisterCompany"
            },
            "description": "A publicly registered company.",
            "nullable": true,
            "xml": {
              "name": "companies",
              "wrapped": true
            }
          },
          "sorting": {
            "$ref": "#/components/schemas/Sorting"
          },
          "correctedQuery": {
            "type": "string",
            "description": "A possible rewrite of the query string made by the search engine. The search result typically reflects this\r\nrewritten query",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "numberOfHits": {
            "type": "integer",
            "description": "Total number of hits available.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "filterGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterGroup"
            },
            "description": "A set of related filters. The display name is a common description for all the filters in the group. I.e. if the display name in the filter group is: 'Countrypart' then you can expect all filters to represent a particular country part like: Nord-Norge (North of Norway) or Vestlandet.",
            "nullable": true,
            "xml": {
              "name": "filterGroups",
              "wrapped": true
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "additionalProperties": false,
        "description": "List of register companies",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "RegisterCompanyType": {
        "type": "object",
        "properties": {
          "countryId": {
            "type": "string",
            "description": "Country code",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "id": {
            "type": "string",
            "description": "Abbreviation for the company type, e.g. AS, AB etc.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "Name of the company type, e.g. \"Aksjeselskap\", \"Aktiebolag\" etc.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "A list of official company types.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "CallLimit": {
        "type": "object",
        "properties": {
          "perMinute": {
            "type": "integer",
            "description": "Calls allowed per minute",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "perHour": {
            "type": "integer",
            "description": "Calls allowed per hour",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "perDay": {
            "type": "integer",
            "description": "Calls allowed per day",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "perMonth": {
            "type": "integer",
            "description": "Calls allowed per month",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "perYear": {
            "type": "integer",
            "description": "Calls allowed per year",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "perPeriod": {
            "type": "integer",
            "description": "Calls allowed per period",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "Call limits",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Period": {
        "type": "object",
        "properties": {
          "start": {
            "$ref": "#/components/schemas/DateOnly"
          },
          "end": {
            "$ref": "#/components/schemas/DateOnly"
          },
          "calls": {
            "type": "integer",
            "description": "Total calls - within the period",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "Performed calls in a period",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "CallStats": {
        "type": "object",
        "properties": {
          "lastMinute": {
            "type": "integer",
            "description": "Calls performed last minute",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "lastHour": {
            "type": "integer",
            "description": "Calls performed last hour",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "lastDay": {
            "type": "integer",
            "description": "Calls performed last day",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "lastMonth": {
            "type": "integer",
            "description": "Calls performed last month",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "lastYear": {
            "type": "integer",
            "description": "Calls performed last year",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "period": {
            "$ref": "#/components/schemas/Period"
          }
        },
        "additionalProperties": false,
        "description": "Performed calls",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "TokenInformation": {
        "type": "object",
        "properties": {
          "tokenString": {
            "type": "string",
            "description": "Token",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "callLimit": {
            "$ref": "#/components/schemas/CallLimit"
          },
          "callsPerformed": {
            "$ref": "#/components/schemas/CallStats"
          }
        },
        "additionalProperties": false,
        "description": "Token information",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "ShareholderEntity": {
        "type": "object",
        "properties": {
          "owners": {
            "type": "integer",
            "description": "If this instance is a company, number of shareholders in current company.\r\nElse, 0.",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "indirectOwners": {
            "type": "integer",
            "description": "If this instance is a company, number of indirect shareholders in current company.\r\nElse, 0.",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "ownerships": {
            "type": "integer",
            "description": "Number of direct ownerships for this instance.",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "indirectOwnerships": {
            "type": "integer",
            "description": "Number of indirect ownerships for this instance.",
            "format": "int32",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "id": {
            "type": "string",
            "description": "Shareholder-ID. Used when fetching more information for this shareholder.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "organisationNumber": {
            "type": "string",
            "description": "Organisation number. Only available for company shareholder.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "birthYear": {
            "type": "string",
            "description": "Four-digit birth year. Only available for person shareholder.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "birthDate": {
            "type": "string",
            "description": "Only available for person shareholder.",
            "format": "date-time",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "Company- or person name.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "address": {
            "type": "string",
            "description": "Shareholder address. E.g.: \"Drammensveien 1\"",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "zipCode": {
            "type": "string",
            "description": "Shareholder postal code. E.g.: \"1234\"",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "location": {
            "type": "string",
            "description": "Shareholder city. E.g. \"OSLO\":",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "country": {
            "type": "string",
            "description": "Shareholder ISO2 country code. E.g.: \"NO\"",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "entityType": {
            "type": "string",
            "description": "Describes type of shareholder. [\"Person\" | \"Company\" | \"Unknown\"]",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "Represents a company or person share ownership.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "ShareholdersResult": {
        "type": "object",
        "properties": {
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShareholderEntity"
            },
            "description": "Array of ShareholderEntity",
            "nullable": true,
            "xml": {
              "name": "entities",
              "wrapped": true
            }
          },
          "correctedQuery": {
            "type": "string",
            "description": "A possible rewrite of the query string made by the search engine. The search result typically reflects this\r\nrewritten query",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "numberOfHits": {
            "type": "integer",
            "description": "Total number of hits available.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "filterGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterGroup"
            },
            "description": "A set of related filters. The display name is a common description for all the filters in the group. I.e. if the display name in the filter group is: 'Countrypart' then you can expect all filters to represent a particular country part like: Nord-Norge (North of Norway) or Vestlandet.",
            "nullable": true,
            "xml": {
              "name": "filterGroups",
              "wrapped": true
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "additionalProperties": false,
        "description": "Query result.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "Relation": {
        "type": "object",
        "properties": {
          "shareType": {
            "type": "string",
            "description": "Share type. E.g.: \"A-aksjer\"",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "totalShares": {
            "type": "integer",
            "description": "Total number of shares in current company.",
            "format": "int64",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "numberOfShares": {
            "type": "integer",
            "description": "Number of shares owned by this shareholder in current company.",
            "format": "int64",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "sharePercentage": {
            "type": "number",
            "description": "Share percentage owned by this shareholder in current company.",
            "format": "double",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "direct": {
            "type": "boolean",
            "description": "Indicates if ownerships are restricted to direct ownerships. [true | false]",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "sourceDate": {
            "type": "number",
            "format": "double",
            "writeOnly": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "updateDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "id": {
            "type": "string",
            "description": "Shareholder-ID. Used when fetching more information for this shareholder.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "organisationNumber": {
            "type": "string",
            "description": "Organisation number. Only available for company shareholder.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "birthYear": {
            "type": "string",
            "description": "Four-digit birth year. Only available for person shareholder.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "birthDate": {
            "type": "string",
            "description": "Only available for person shareholder.",
            "format": "date-time",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "name": {
            "type": "string",
            "description": "Company- or person name.",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "address": {
            "type": "string",
            "description": "Shareholder address. E.g.: \"Drammensveien 1\"",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "zipCode": {
            "type": "string",
            "description": "Shareholder postal code. E.g.: \"1234\"",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "location": {
            "type": "string",
            "description": "Shareholder city. E.g. \"OSLO\":",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "country": {
            "type": "string",
            "description": "Shareholder ISO2 country code. E.g.: \"NO\"",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "entityType": {
            "type": "string",
            "description": "Describes type of shareholder. [\"Person\" | \"Company\" | \"Unknown\"]",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          }
        },
        "additionalProperties": false,
        "description": "Represents a company or person share ownership.",
        "xml": {
          "name": "SchemaFilterContext"
        }
      },
      "LookupResult": {
        "type": "object",
        "properties": {
          "relations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relation"
            },
            "description": "Array of Relation instances",
            "nullable": true,
            "xml": {
              "name": "relations",
              "wrapped": true
            }
          },
          "correctedQuery": {
            "type": "string",
            "description": "A possible rewrite of the query string made by the search engine. The search result typically reflects this\r\nrewritten query",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "numberOfHits": {
            "type": "integer",
            "description": "Total number of hits available.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "SchemaFilterContext"
            }
          },
          "filterGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterGroup"
            },
            "description": "A set of related filters. The display name is a common description for all the filters in the group. I.e. if the display name in the filter group is: 'Countrypart' then you can expect all filters to represent a particular country part like: Nord-Norge (North of Norway) or Vestlandet.",
            "nullable": true,
            "xml": {
              "name": "filterGroups",
              "wrapped": true
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "additionalProperties": false,
        "description": "LookupResult",
        "xml": {
          "name": "SchemaFilterContext"
        }
      }
    },
    "securitySchemes": {
      "Token": {
        "type": "apiKey",
        "description": "Specify a token. \nExample: \"Token yJhbGciOiJIUzI1iIsInR5cCI6IkpXVCJ9\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Token": [ ]
    }
  ]
}